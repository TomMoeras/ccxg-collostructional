arg_struc_cxn	lemma
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	deal
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	isolate
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	designate
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	appoint
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	brief
arg0(np)-v(v)-arg1(np)-arg2(pp)	gain
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	demand
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	depict
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	import
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	secure
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	infuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	stab
arg0(np)-v(v)-arg1(np)-arg2(pp)	stab
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	open
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	preclude
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	comfort
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn
arg0(np)-v(v)-arg2(np)-arg1(np)	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	shock
arg0(np)-v(v)-arg1(np)-arg2(pp)	awe
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	respect
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	pose
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	serve
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	fault
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	register
arg0(np)-v(v)-arg2(np)-arg1(np)	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	respect
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	solve
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	register
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	learn
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	breathe
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	educate
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	collect
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	look
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	delay
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	talk
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	entrust
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	subject
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	credit
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	define
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	consider
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	level
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	rent
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	direct
arg0(np)-v(v)-arg1(np)-arg2(pp)	incorporate
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	declare
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	rate
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	display
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	represent
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	defer
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	pin
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	hand
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	blind
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	install
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg2(np)-arg1(np)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	recall
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	infuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	thrust
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	congratulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	guarantee
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	load
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	sentence
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	close
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	clean
arg0(np)-v(v)-arg1(np)-arg2(pp)	recall
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	roll
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	order
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	track
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	identify
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	expel
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate
arg0(np)-v(v)-arg1(np)-arg2(pp)	liberate
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	conceal
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	call
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	license
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	clear
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	monitor
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	know
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	report
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	end
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	challenge
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	split
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	communicate
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	rate
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	attack
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	address
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	prolong
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	rescue
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	reelect
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	trap
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	confront
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	dispatch
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	wage
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	know
arg0(np)-v(v)-arg1(np)-arg2(pp)	influence
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	compliment
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	coAuthor
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	tailor
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	pin
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	recommend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	challenge
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	indite
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	ban
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	hail
arg0(np)-v(v)-arg1(np)-arg2(pp)	trounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	castigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	spill
arg0(np)-v(v)-arg1(np)-arg2(pp)	mistake
arg0(np)-v(v)-arg1(np)-arg2(pp)	mix
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	tear
arg0(np)-v(v)-arg1(np)-arg2(pp)	resolve
arg0(np)-v(v)-arg1(np)-arg2(pp)	tear
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	nominate
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	confine
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	recover
arg0(np)-v(v)-arg1(np)-arg2(pp)	tear
arg0(np)-v(v)-arg1(np)-arg2(pp)	wage
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	snatch
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	congratulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	strip
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	congratulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	arrest
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	immunize
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	identify
arg0(np)-v(v)-arg1(np)-arg2(pp)	condition
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	align
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	source
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	dedicate
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	shield
arg0(np)-v(v)-arg1(np)-arg2(pp)	collect
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	wed
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	ascribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	tangle
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	dress
arg0(np)-v(v)-arg1(np)-arg2(pp)	redefine
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	deal
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	hang
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	scare
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	confer
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	sling
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	familiarize
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	tutor
arg0(np)-v(v)-arg1(np)-arg2(pp)	mesh
arg0(np)-v(v)-arg2(np)-arg1(np)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	integrate
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	catch
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	exchange
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	seduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	recover
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	hail
arg0(np)-v(v)-arg1(np)-arg2(pp)	weigh
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	impress
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	commend
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	compliment
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	rob
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	open
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	attract
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	attract
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	post
arg0(np)-v(v)-arg1(np)-arg2(pp)	gain
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	level
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	solve
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	shed
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	lavish
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	appraise
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	close
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	extoll
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	hand
arg0(np)-v(v)-arg1(np)-arg2(pp)	investigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	shape
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	immerse
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	blind
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	open
arg0(np)-v(v)-arg1(np)-arg2(pp)	target
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	plate
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	bill
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	scatter
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	instal
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	position
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	rush
arg0(np)-v(v)-arg1(np)-arg2(pp)	credit
arg0(np)-v(v)-arg1(np)-arg2(pp)	bury
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	produce
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	examine
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	polish
arg0(np)-v(v)-arg1(np)-arg2(pp)	imagine
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	tap
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	tap
arg0(np)-v(v)-arg1(np)-arg2(pp)	carve
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	mix
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg2(np)-arg1(np)	singe
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	elicit
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	post
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	speak
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	identify
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	wreak
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	exact
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict
arg0(np)-v(v)-arg1(np)-arg2(pp)	attract
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	budget
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg2(np)-arg1(np)	earn
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	distance
arg0(np)-v(v)-arg1(np)-arg2(pp)	open
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	embroil
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg2(np)-arg1(np)	deal
arg0(np)-v(v)-arg1(np)-arg2(pp)	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	infuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	kill
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	sacrifice
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	entertain
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	close
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	conform
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	dismiss
arg0(np)-v(v)-arg1(np)-arg2(pp)	liberate
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	block
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	flip
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	heat
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunge
arg0(np)-v(v)-arg1(np)-arg2(pp)	cram
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	block
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	trace
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	trace
arg0(np)-v(v)-arg1(np)-arg2(pp)	brief
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	battle
arg0(np)-v(v)-arg1(np)-arg2(pp)	attract
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	subject
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	indict
arg0(np)-v(v)-arg1(np)-arg2(pp)	extort
arg0(np)-v(v)-arg1(np)-arg2(pp)	muscle
arg0(np)-v(v)-arg2(np)-arg1(np)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	jail
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	lower
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	appeal
arg0(np)-v(v)-arg1(np)-arg2(pp)	dip
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	harm
arg0(np)-v(v)-arg1(np)-arg2(pp)	deter
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	catapult
arg0(np)-v(v)-arg1(np)-arg2(pp)	hurl
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	talk
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	oust
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	loan
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	outsell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	alternate
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	initiate
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	equate
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	refund
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	administer
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	enhance
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg2(np)-arg1(np)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	lord
arg0(np)-v(v)-arg2(np)-arg1(np)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	flash
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	clear
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	build
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	merge
arg0(np)-v(v)-arg1(np)-arg2(pp)	lock
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	license
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	defend
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	transplant
arg0(np)-v(v)-arg1(np)-arg2(pp)	license
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	dissuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	drop
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	approve
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	price
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	value
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	design
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	shave
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	reset
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	signal
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	tangle
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	sprinkle
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	build
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer
arg0(np)-v(v)-arg1(np)-arg2(pp)	require
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	buffer
arg0(np)-v(v)-arg1(np)-arg2(pp)	castigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	distract
arg0(np)-v(v)-arg1(np)-arg2(pp)	deter
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	recover
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	incur
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	reap
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	pit
arg0(np)-v(v)-arg1(np)-arg2(pp)	renounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	import
arg0(np)-v(v)-arg1(np)-arg2(pp)	investigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	browbeat
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	execute
arg0(np)-v(v)-arg1(np)-arg2(pp)	execute
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	intermix
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate
arg0(np)-v(v)-arg1(np)-arg2(pp)	work
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg2(np)-arg1(np)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	promote
arg0(np)-v(v)-arg1(np)-arg2(pp)	propel
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	inherit
arg0(np)-v(v)-arg1(np)-arg2(pp)	inherit
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	predispose
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	halt
arg0(np)-v(v)-arg1(np)-arg2(pp)	level
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	preclude
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	export
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	miss
arg0(np)-v(v)-arg1(np)-arg2(pp)	miss
arg0(np)-v(v)-arg1(np)-arg2(pp)	shock
arg0(np)-v(v)-arg1(np)-arg2(pp)	value
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	form
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	file
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	summon
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	budget
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	castigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	prescribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	yank
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	rank
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	derive
arg0(np)-v(v)-arg1(np)-arg2(pp)	handle
arg0(np)-v(v)-arg1(np)-arg2(pp)	exonerate
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	thrust
arg0(np)-v(v)-arg1(np)-arg2(pp)	bully
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	stun
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	collect
arg0(np)-v(v)-arg2(np)-arg1(np)	fine
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	depict
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	summon
arg0(np)-v(v)-arg1(np)-arg2(pp)	radio
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	chide
arg0(np)-v(v)-arg1(np)-arg2(pp)	delegate
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg2(np)-arg1(np)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	sublet
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	try
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	list
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	pin
arg0(np)-v(v)-arg1(np)-arg2(pp)	shove
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	flood
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	saddle
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	ban
arg0(np)-v(v)-arg1(np)-arg2(pp)	freeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	blend
arg0(np)-v(v)-arg1(np)-arg2(pp)	meld
arg0(np)-v(v)-arg1(np)-arg2(pp)	stamp
arg0(np)-v(v)-arg1(np)-arg2(pp)	infuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	funnel
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	expand
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	whip
arg0(np)-v(v)-arg1(np)-arg2(pp)	trim
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	conclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	stockpile
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	steer
arg0(np)-v(v)-arg1(np)-arg2(pp)	wreak
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	coordinate
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	comb
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	distance
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	indict
arg0(np)-v(v)-arg1(np)-arg2(pp)	block
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	approve
arg0(np)-v(v)-arg1(np)-arg2(pp)	attract
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	portend
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	line
arg0(np)-v(v)-arg1(np)-arg2(pp)	propel
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	trim
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	detect
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	scour
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	freeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	rescue
arg0(np)-v(v)-arg1(np)-arg2(pp)	ally
arg0(np)-v(v)-arg1(np)-arg2(pp)	depict
arg0(np)-v(v)-arg1(np)-arg2(pp)	hoodwink
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg2(np)-arg1(np)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	reopen
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bridge
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	solve
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	start
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	require
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	catch
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	pluck
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg2(np)-arg1(np)	earn
arg0(np)-v(v)-arg2(np)-arg1(np)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	demand
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	earmark
arg0(np)-v(v)-arg1(np)-arg2(pp)	couch
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	steer
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	drop
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sweep
arg0(np)-v(v)-arg1(np)-arg2(pp)	pack
arg0(np)-v(v)-arg1(np)-arg2(pp)	assign
arg0(np)-v(v)-arg2(np)-arg1(np)	find
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	bury
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	heap
arg0(np)-v(v)-arg1(np)-arg2(pp)	cushion
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	adjust
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	elevate
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	doom
arg0(np)-v(v)-arg1(np)-arg2(pp)	conceal
arg0(np)-v(v)-arg1(np)-arg2(pp)	model
arg0(np)-v(v)-arg1(np)-arg2(pp)	collect
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	confront
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	amend
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	modify
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	solicit
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	credit
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	transmit
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	lambaste
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	drop
arg0(np)-v(v)-arg1(np)-arg2(pp)	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	enlist
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	package
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	bequeath
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrain
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg2(np)-arg1(np)	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrestle
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	adorn
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	equate
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	subject
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	pin
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	clean
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	couch
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	disqualify
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	mislead
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	earn
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	fit
arg0(np)-v(v)-arg1(np)-arg2(pp)	stun
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	finance
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	insert
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore
arg0(np)-v(v)-arg2(np)-arg1(np)	allow
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	attack
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	blast
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	transmit
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	fold
arg0(np)-v(v)-arg1(np)-arg2(pp)	lecture
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	earmark
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	list
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	discount
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	approve
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	pose
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	value
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	inflict
arg0(np)-v(v)-arg1(np)-arg2(pp)	block
arg0(np)-v(v)-arg1(np)-arg2(pp)	outbid
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	know
arg0(np)-v(v)-arg1(np)-arg2(pp)	frame
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	design
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	display
arg0(np)-v(v)-arg1(np)-arg2(pp)	bode
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	contrast
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	peg
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	aggravate
arg0(np)-v(v)-arg1(np)-arg2(pp)	price
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	create
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	stash
arg0(np)-v(v)-arg1(np)-arg2(pp)	burden
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	omit
arg0(np)-v(v)-arg1(np)-arg2(pp)	assign
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	lambaste
arg0(np)-v(v)-arg1(np)-arg2(pp)	bill
arg0(np)-v(v)-arg2(np)-arg1(np)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	hail
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	strike
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	absolve
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	gain
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	cushion
arg0(np)-v(v)-arg1(np)-arg2(pp)	split
arg0(np)-v(v)-arg2(np)-arg1(np)	accord
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	slash
arg0(np)-v(v)-arg1(np)-arg2(pp)	deplete
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	knock
arg0(np)-v(v)-arg1(np)-arg2(pp)	break
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrestle
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	shove
arg0(np)-v(v)-arg2(np)-arg1(np)	will
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg2(np)-arg1(np)	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	sentence
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	reconstruct
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	lower
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	sprawl
arg0(np)-v(v)-arg1(np)-arg2(pp)	hang
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	incur
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	attack
arg0(np)-v(v)-arg1(np)-arg2(pp)	indict
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	curry
arg0(np)-v(v)-arg1(np)-arg2(pp)	familiarize
arg0(np)-v(v)-arg1(np)-arg2(pp)	refocus
arg0(np)-v(v)-arg1(np)-arg2(pp)	pave
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	carry
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	pile
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek
arg0(np)-v(v)-arg2(np)-arg1(np)	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	adapt
arg0(np)-v(v)-arg1(np)-arg2(pp)	insert
arg0(np)-v(v)-arg1(np)-arg2(pp)	defraud
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	extricate
arg0(np)-v(v)-arg1(np)-arg2(pp)	hurl
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	feed
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	stimulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	target
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	gather
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	purge
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg2(np)-arg1(np)	allow
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	redesign
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	boost
arg0(np)-v(v)-arg2(np)-arg1(np)	mail
arg0(np)-v(v)-arg1(np)-arg2(pp)	preRegister
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	test
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	maneuver
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	maneuver
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	pitch
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	ally
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	assimilate
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	disengage
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg2(np)-arg1(np)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	enjoin
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	control
arg0(np)-v(v)-arg1(np)-arg2(pp)	choose
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	siphon
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	pit
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	file
arg0(np)-v(v)-arg1(np)-arg2(pp)	display
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	misrepresent
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	peg
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	spray
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	match
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	assail
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	seize
arg0(np)-v(v)-arg1(np)-arg2(pp)	volunteer
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	ensure
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	drop
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	staple
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	translate
arg0(np)-v(v)-arg1(np)-arg2(pp)	split
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	gain
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	applaud
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	counter
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	position
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	split
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	prove
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	compliment
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	split
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	pack
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	build
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	funnel
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	request
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	chastise
arg0(np)-v(v)-arg1(np)-arg2(pp)	judge
arg0(np)-v(v)-arg1(np)-arg2(pp)	trace
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	justify
arg0(np)-v(v)-arg1(np)-arg2(pp)	distance
arg0(np)-v(v)-arg1(np)-arg2(pp)	position
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	promote
arg0(np)-v(v)-arg1(np)-arg2(pp)	swap
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	route
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	start
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tout
arg0(np)-v(v)-arg1(np)-arg2(pp)	lure
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer
arg0(np)-v(v)-arg1(np)-arg2(pp)	extort
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	try
arg0(np)-v(v)-arg1(np)-arg2(pp)	popularize
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	shield
arg0(np)-v(v)-arg1(np)-arg2(pp)	cushion
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	rub
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	recruit
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	extort
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	channel
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	price
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	deal
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spill
arg0(np)-v(v)-arg1(np)-arg2(pp)	file
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	learn
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	cede
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	justify
arg0(np)-v(v)-arg1(np)-arg2(pp)	transmit
arg0(np)-v(v)-arg1(np)-arg2(pp)	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	exempt
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg2(np)-arg1(np)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	funnel
arg0(np)-v(v)-arg1(np)-arg2(pp)	chastise
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	enlist
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	earn
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	distance
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	feature
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	disclose
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	disclose
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	extort
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	dedicate
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunge
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	shield
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	recover
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	chide
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunge
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	build
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	enrol
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	shove
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg2(np)-arg1(np)	lend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	prod
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	omit
arg0(np)-v(v)-arg1(np)-arg2(pp)	foul
arg0(np)-v(v)-arg1(np)-arg2(pp)	offset
arg0(np)-v(v)-arg1(np)-arg2(pp)	build
arg0(np)-v(v)-arg1(np)-arg2(pp)	assign
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	reinveste
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	derive
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	reclassify
arg0(np)-v(v)-arg1(np)-arg2(pp)	list
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	embellish
arg0(np)-v(v)-arg1(np)-arg2(pp)	insulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	phone
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	counter
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	ingratiate
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	charge
arg0(np)-v(v)-arg2(np)-arg1(np)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	cloak
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	exempt
arg0(np)-v(v)-arg1(np)-arg2(pp)	market
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	survey
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	shoot
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	glut
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	display
arg0(np)-v(v)-arg1(np)-arg2(pp)	confiscate
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	steer
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	process
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	subordinate
arg0(np)-v(v)-arg1(np)-arg2(pp)	decribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	hurt
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	match
arg0(np)-v(v)-arg1(np)-arg2(pp)	retool
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate
arg0(np)-v(v)-arg1(np)-arg2(pp)	read
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thrust
arg0(np)-v(v)-arg1(np)-arg2(pp)	learn
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	recommend
arg0(np)-v(v)-arg1(np)-arg2(pp)	wreak
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	position
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	ratify
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict
arg0(np)-v(v)-arg1(np)-arg2(pp)	prod
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	liken
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	target
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	pose
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	direct
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	safeguard
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	track
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg2(np)-arg1(np)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	equip
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	translate
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	allocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	wage
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	spill
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	relocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	halt
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	appeal
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	airlift
arg0(np)-v(v)-arg1(np)-arg2(pp)	disassociate
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	install
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	derive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	integrate
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	perform
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	constrain
arg0(np)-v(v)-arg1(np)-arg2(pp)	license
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	scoot
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	block
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	peg
arg0(np)-v(v)-arg1(np)-arg2(pp)	reclassify
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	reinvest
arg0(np)-v(v)-arg1(np)-arg2(pp)	embrace
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	incorporate
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	counter
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	rain
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	stir
arg0(np)-v(v)-arg1(np)-arg2(pp)	tag
arg0(np)-v(v)-arg1(np)-arg2(pp)	boost
arg0(np)-v(v)-arg1(np)-arg2(pp)	boost
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	spew
arg0(np)-v(v)-arg1(np)-arg2(pp)	lift
arg0(np)-v(v)-arg1(np)-arg2(pp)	release
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	collect
arg0(np)-v(v)-arg1(np)-arg2(pp)	refinance
arg0(np)-v(v)-arg2(np)-arg1(np)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	label
arg0(np)-v(v)-arg1(np)-arg2(pp)	defer
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	waive
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	staff
arg0(np)-v(v)-arg1(np)-arg2(pp)	retrofit
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	list
arg0(np)-v(v)-arg1(np)-arg2(pp)	dignify
arg0(np)-v(v)-arg1(np)-arg2(pp)	inspect
arg0(np)-v(v)-arg1(np)-arg2(pp)	spare
arg0(np)-v(v)-arg1(np)-arg2(pp)	instal
arg0(np)-v(v)-arg1(np)-arg2(pp)	dispatch
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	play
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	approach
arg0(np)-v(v)-arg1(np)-arg2(pp)	console
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	fine
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	designate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept
arg0(np)-v(v)-arg2(np)-arg1(np)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	steer
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	reclaim
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	value
arg0(np)-v(v)-arg1(np)-arg2(pp)	reckon
arg0(np)-v(v)-arg1(np)-arg2(pp)	consult
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	reassign
arg0(np)-v(v)-arg1(np)-arg2(pp)	reroute
arg0(np)-v(v)-arg1(np)-arg2(pp)	execute
arg0(np)-v(v)-arg1(np)-arg2(pp)	execute
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	tout
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	cross
arg0(np)-v(v)-arg1(np)-arg2(pp)	shave
arg0(np)-v(v)-arg1(np)-arg2(pp)	want
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	claim
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	exonerate
arg0(np)-v(v)-arg1(np)-arg2(pp)	coax
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	top
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	project
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	require
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	consolidate
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	congratulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	extract
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	clutter
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	whip
arg0(np)-v(v)-arg1(np)-arg2(pp)	engage
arg0(np)-v(v)-arg1(np)-arg2(pp)	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	guarantee
arg0(np)-v(v)-arg1(np)-arg2(pp)	handle
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	deserve
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	render
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	americanize
arg0(np)-v(v)-arg1(np)-arg2(pp)	open
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	deal
arg0(np)-v(v)-arg1(np)-arg2(pp)	append
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	knock
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	instal
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	file
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	drop
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	lower
arg0(np)-v(v)-arg1(np)-arg2(pp)	outfit
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hide
arg0(np)-v(v)-arg1(np)-arg2(pp)	distinguish
arg0(np)-v(v)-arg1(np)-arg2(pp)	handle
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	think
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	fund
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	forgive
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	scour
arg0(np)-v(v)-arg1(np)-arg2(pp)	create
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	abandon
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	splash
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	scold
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	catch
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	indict
arg0(np)-v(v)-arg1(np)-arg2(pp)	arrest
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	involve
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	finger
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	represent
arg0(np)-v(v)-arg1(np)-arg2(pp)	rationalize
arg0(np)-v(v)-arg1(np)-arg2(pp)	educate
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	split
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	miss
arg0(np)-v(v)-arg1(np)-arg2(pp)	miss
arg0(np)-v(v)-arg1(np)-arg2(pp)	deduct
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	deposit
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	consign
arg0(np)-v(v)-arg1(np)-arg2(pp)	lump
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	yield
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	earmark
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	delete
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	surrender
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	begin
arg0(np)-v(v)-arg1(np)-arg2(pp)	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	assimilate
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	expunge
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	fine
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	segregate
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hail
arg0(np)-v(v)-arg1(np)-arg2(pp)	embrace
arg0(np)-v(v)-arg2(np)-arg1(np)	hand
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	earn
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit
arg0(np)-v(v)-arg1(np)-arg2(pp)	play
arg0(np)-v(v)-arg1(np)-arg2(pp)	develop
arg0(np)-v(v)-arg2(np)-arg1(np)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	tape
arg0(np)-v(v)-arg1(np)-arg2(pp)	gather
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	park
arg0(np)-v(v)-arg1(np)-arg2(pp)	dedicate
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	resume
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	rush
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	promote
arg0(np)-v(v)-arg1(np)-arg2(pp)	funnel
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	talk
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	bury
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg2(np)-arg1(np)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	represent
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	catch
arg0(np)-v(v)-arg1(np)-arg2(pp)	assign
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	outperform
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	occupy
arg0(np)-v(v)-arg1(np)-arg2(pp)	import
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	find
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	create
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	occupy
arg0(np)-v(v)-arg1(np)-arg2(pp)	adapt
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	control
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	infuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	occupy
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	brief
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	elevate
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	station
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	intensify
arg0(np)-v(v)-arg1(np)-arg2(pp)	relay
arg0(np)-v(v)-arg1(np)-arg2(pp)	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	station
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	break
arg0(np)-v(v)-arg1(np)-arg2(pp)	break
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	forgive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hide
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	answer
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	reward
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	stand
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	spread
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	hang
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	warn
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	dig
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	shout
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spread
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	carry
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	heal
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	wash
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	wash
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	heal
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	dip
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	shout
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	dip
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prove
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	rescue
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	earn
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	tear
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	singe
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	speak
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	think
arg0(np)-v(v)-arg1(np)-arg2(pp)	reward
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	destroy
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	sing
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	shine
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hurt
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	clothe
arg0(np)-v(v)-arg1(np)-arg2(pp)	clothe
arg0(np)-v(v)-arg1(np)-arg2(pp)	clothe
arg0(np)-v(v)-arg1(np)-arg2(pp)	clothe
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	comfort
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	write
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prove
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	seat
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	speak
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	forgive
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	kill
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	destroy
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	crown
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	spread
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	speak
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept
arg0(np)-v(v)-arg1(np)-arg2(pp)	learn
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	want
arg0(np)-v(v)-arg1(np)-arg2(pp)	please
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	rub
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	carry
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	trust
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	involve
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	wash
arg0(np)-v(v)-arg1(np)-arg2(pp)	wipe
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sweep
arg0(np)-v(v)-arg1(np)-arg2(pp)	pour
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	destroy
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	wipe
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	carry
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	measure
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	recognize
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	associate
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hand
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	supplement
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	screw
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	hand
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	box
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	mention
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	fax
arg0(np)-v(v)-arg2(np)-arg1(np)	fax
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	jam
arg0(np)-v(v)-arg2(np)-arg1(np)	guarantee
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	rub
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	charge
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	work
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	know
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	write
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	write
arg0(np)-v(v)-arg2(np)-arg1(np)	write
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg2(np)-arg1(np)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	exchange
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	release
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	milk
arg0(np)-v(v)-arg1(np)-arg2(pp)	shed
arg0(np)-v(v)-arg1(np)-arg2(pp)	favor
arg0(np)-v(v)-arg1(np)-arg2(pp)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	end
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	conclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	prostrate
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	destroy
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	exert
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	fire
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	recite
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	postpone
arg0(np)-v(v)-arg1(np)-arg2(pp)	destroy
arg0(np)-v(v)-arg1(np)-arg2(pp)	reveal
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	strike
arg0(np)-v(v)-arg1(np)-arg2(pp)	strike
arg0(np)-v(v)-arg1(np)-arg2(pp)	strike
arg0(np)-v(v)-arg2(np)-arg1(np)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	please
arg0(np)-v(v)-arg2(np)-arg1(np)	feed
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	liken
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	allocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	occupy
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	begin
arg0(np)-v(v)-arg1(np)-arg2(pp)	end
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	reward
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	reward
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	forgive
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	sacrifice
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	relegate
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	supplement
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	heap
arg0(np)-v(v)-arg1(np)-arg2(pp)	associate
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	exert
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	understand
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	announce
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	cloak
arg0(np)-v(v)-arg1(np)-arg2(pp)	inherit
arg0(np)-v(v)-arg1(np)-arg2(pp)	inflict
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	stain
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	rap
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	learn
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	dump
arg0(np)-v(v)-arg1(np)-arg2(pp)	dump
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	educate
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	assess
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fault
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	redirect
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict
arg0(np)-v(v)-arg1(np)-arg2(pp)	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	fault
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	generate
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	run
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	yank
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	wipe
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer
arg0(np)-v(v)-arg1(np)-arg2(pp)	recount
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	hire
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	level
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	fuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	hand
arg0(np)-v(v)-arg1(np)-arg2(pp)	suspend
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	investigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	inflict
arg0(np)-v(v)-arg1(np)-arg2(pp)	erase
arg0(np)-v(v)-arg1(np)-arg2(pp)	veto
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunge
arg0(np)-v(v)-arg1(np)-arg2(pp)	surrender
arg0(np)-v(v)-arg1(np)-arg2(pp)	cede
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	nominate
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	thwappe
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel
arg0(np)-v(v)-arg1(np)-arg2(pp)	splash
arg0(np)-v(v)-arg1(np)-arg2(pp)	demand
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	relay
arg0(np)-v(v)-arg1(np)-arg2(pp)	request
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	submerge
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	absorb
arg0(np)-v(v)-arg1(np)-arg2(pp)	wipe
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	wage
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	crown
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	start
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	engulf
arg0(np)-v(v)-arg1(np)-arg2(pp)	motivate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	infect
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	lodge
arg0(np)-v(v)-arg1(np)-arg2(pp)	defend
arg0(np)-v(v)-arg1(np)-arg2(pp)	fix
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	import
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	brief
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunge
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	deposit
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	carry
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	declare
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	kill
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	post
arg0(np)-v(v)-arg1(np)-arg2(pp)	post
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	dedicate
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	look
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	park
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	settle
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	congratulate
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	break
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	pose
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg2(np)-arg1(np)	find
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	expel
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	pave
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	reinstate
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spill
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	appoint
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	incorporate
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	fund
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	liken
arg0(np)-v(v)-arg1(np)-arg2(pp)	parlay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	enshrine
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	secure
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish
arg0(np)-v(v)-arg1(np)-arg2(pp)	thrust
arg0(np)-v(v)-arg1(np)-arg2(pp)	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	allocate
arg0(np)-v(v)-arg2(np)-arg1(np)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	summon
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg2(np)-arg1(np)	feed
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	hurt
arg0(np)-v(v)-arg1(np)-arg2(pp)	deter
arg0(np)-v(v)-arg1(np)-arg2(pp)	laud
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	store
arg0(np)-v(v)-arg1(np)-arg2(pp)	store
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	redeploy
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	stress
arg0(np)-v(v)-arg1(np)-arg2(pp)	poll
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	alert
arg0(np)-v(v)-arg1(np)-arg2(pp)	tuck
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	open
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	propel
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	display
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	investigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	design
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	lure
arg0(np)-v(v)-arg1(np)-arg2(pp)	trace
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	thumb
arg0(np)-v(v)-arg1(np)-arg2(pp)	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	equip
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	challenge
arg0(np)-v(v)-arg1(np)-arg2(pp)	license
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	chastise
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	pressure
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	deserve
arg0(np)-v(v)-arg1(np)-arg2(pp)	bundle
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	aim
arg0(np)-v(v)-arg1(np)-arg2(pp)	tailor
arg0(np)-v(v)-arg1(np)-arg2(pp)	reward
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	aggravate
arg0(np)-v(v)-arg1(np)-arg2(pp)	direct
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	swap
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	forgive
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	discipline
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	ascribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	impart
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	entice
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	install
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	predispose
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	preclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	proscribe
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	recommend
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	subject
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	target
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	hand
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	screen
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg2(np)-arg1(np)	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	decry
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	factor
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	build
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	smother
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	rank
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	yield
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	withhold
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	define
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	plug
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	rush
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	pave
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	break
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	pressure
arg0(np)-v(v)-arg1(np)-arg2(pp)	peg
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	distract
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	tip
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	salvage
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	yield
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	distinguish
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunk
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	license
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	rescue
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	oust
arg0(np)-v(v)-arg1(np)-arg2(pp)	amortize
arg0(np)-v(v)-arg1(np)-arg2(pp)	come
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	exhort
arg0(np)-v(v)-arg1(np)-arg2(pp)	broker
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	dismiss
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	identify
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	answer
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	value
arg0(np)-v(v)-arg1(np)-arg2(pp)	pose
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	herald
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer
arg0(np)-v(v)-arg2(np)-arg1(np)	serve
arg0(np)-v(v)-arg1(np)-arg2(pp)	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	tout
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	display
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	forward
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrain
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	list
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	sing
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hide
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	scare
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	write
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	upload
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	direct
arg0(np)-v(v)-arg1(np)-arg2(pp)	deal
arg0(np)-v(v)-arg1(np)-arg2(pp)	pound
arg0(np)-v(v)-arg1(np)-arg2(pp)	spew
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	mistake
arg0(np)-v(v)-arg1(np)-arg2(pp)	mistake
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	talk
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	adapt
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive
arg0(np)-v(v)-arg2(np)-arg1(np)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	scapegoat
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	desensitize
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	avert
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	outsource
arg0(np)-v(v)-arg1(np)-arg2(pp)	repeat
arg0(np)-v(v)-arg1(np)-arg2(pp)	build
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	stab
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bid
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	channel
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	outsource
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	shoot
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	deter
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	summon
arg0(np)-v(v)-arg1(np)-arg2(pp)	rate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	earn
arg0(np)-v(v)-arg1(np)-arg2(pp)	bid
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	brief
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	bank
arg0(np)-v(v)-arg2(np)-arg1(np)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	tear
arg0(np)-v(v)-arg1(np)-arg2(pp)	heap
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	pack
arg0(np)-v(v)-arg1(np)-arg2(pp)	dispatch
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	credit
arg0(np)-v(v)-arg2(np)-arg1(np)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	redirect
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	detain
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	propose
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	wage
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	trace
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	represent
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	identify
arg0(np)-v(v)-arg1(np)-arg2(pp)	recruit
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	close
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	display
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg2(np)-arg1(np)	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	break
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	pepper
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	talk
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	allocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	allocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	hook
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	recommend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pave
arg0(np)-v(v)-arg1(np)-arg2(pp)	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	file
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	remember
arg0(np)-v(v)-arg1(np)-arg2(pp)	excise
arg0(np)-v(v)-arg1(np)-arg2(pp)	recover
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sweep
arg0(np)-v(v)-arg1(np)-arg2(pp)	conclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	wean
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	paint
arg0(np)-v(v)-arg1(np)-arg2(pp)	reposition
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	dismiss
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	purge
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	instal
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	caption
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	lodge
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	heap
arg0(np)-v(v)-arg1(np)-arg2(pp)	sandwich
arg0(np)-v(v)-arg1(np)-arg2(pp)	subject
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	finger
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	couple
arg0(np)-v(v)-arg1(np)-arg2(pp)	enter
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	announce
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	occupy
arg0(np)-v(v)-arg1(np)-arg2(pp)	dedicate
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	start
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	commend
arg0(np)-v(v)-arg1(np)-arg2(pp)	represent
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	touch
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	stand
arg0(np)-v(v)-arg1(np)-arg2(pp)	force
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stand
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spread
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	shout
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	kill
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	make
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	produce
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	mix
arg0(np)-v(v)-arg1(np)-arg2(pp)	sprinkle
arg0(np)-v(v)-arg1(np)-arg2(pp)	sprinkle
arg0(np)-v(v)-arg1(np)-arg2(pp)	sprinkle
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	get
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	write
arg0(np)-v(v)-arg2(np)-arg1(np)	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	say
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	email
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	begin
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform
arg0(np)-v(v)-arg2(np)-arg1(np)	hand
arg0(np)-v(v)-arg1(np)-arg2(pp)	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	rob
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	rain
arg0(np)-v(v)-arg1(np)-arg2(pp)	curry
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	demand
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	deserve
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	embrace
arg0(np)-v(v)-arg1(np)-arg2(pp)	kill
arg0(np)-v(v)-arg1(np)-arg2(pp)	return
arg0(np)-v(v)-arg2(np)-arg1(np)	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	rush
arg0(np)-v(v)-arg1(np)-arg2(pp)	solve
arg0(np)-v(v)-arg1(np)-arg2(pp)	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend
arg0(np)-v(v)-arg2(np)-arg1(np)	wish
arg0(np)-v(v)-arg2(np)-arg1(np)	wish
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	shove
arg0(np)-v(v)-arg1(np)-arg2(pp)	break
arg0(np)-v(v)-arg2(np)-arg1(np)	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spray
arg0(np)-v(v)-arg1(np)-arg2(pp)	entrust
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	lavish
arg0(np)-v(v)-arg2(np)-arg1(np)	give
arg0(np)-v(v)-arg2(np)-arg1(np)	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell
