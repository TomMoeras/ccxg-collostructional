arg_struc_cxn	roleset	lemma
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect.01	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	deal.02	deal
arg0(np)-v(v)-arg1(np)-arg2(adjp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(jj)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.03	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap.01	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(rp)-arg1(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage.02	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(vp)	welcome.01	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose.01	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	isolate.01	isolate
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	designate.01	designate
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(in)	appoint.01	appoint
arg0(np)-v(v)-arg1(np)-arg2(pp)	appoint.01	appoint
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(s)	urge.01	urge
arg0(np)-v(v)-arg2(pp)-arg1(np)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect.01	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect.01	connect
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	brief.01	brief
arg0(np)-v(v)-arg1(np)-arg2(pp)	gain.02	gain
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue.02	sue
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	try.04	try
arg0(np)-v(v)-arg1(np)-arg2(s)	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	demand.01	demand
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	depict.01	depict
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	import.01	import
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	secure.01	secure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(vp)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute.01	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	infuse.01	infuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(rp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(sbar)	alert.01	alert
arg0(np)-v(v)-arg1(np)-arg2(pp)	stab.01	stab
arg0(np)-v(v)-arg1(np)-arg2(pp)	stab.01	stab
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(in)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	join.04	join
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.01	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick.01	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.04	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	open.01	open
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick.01	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	preclude.01	preclude
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg1(np)-arg0(np)-v(v)-arg2(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	comfort.01	comfort
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(sbar)	praise.01	praise
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn.01	condemn
arg0(np)-v(v)-arg2(np)-arg1(np)	wish.01	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(rb)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	know.01	know
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel.01	feel
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	shock.01	shock
arg0(np)-v(v)-arg1(np)-arg2(pp)	awe.01	awe
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	respect.01	respect
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize.01	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(sbar)	kid.01	kid
arg1(np)-arg0(np)-v(v)-arg2(pp)	hear.01	hear
arg1(np)-arg0(np)-v(v)-arg2(prp)	tell.01	tell
arg1(np)-arg0(np)-v(v)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg1(np)-arg0(np)-v(v)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(advp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg2(rb)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag.01	drag
arg0(np)-v(v)-arg2(rp)-arg1(np)	lay.01	lie
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	pose.02	pose
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept.01	accept
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(dt)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue.02	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	serve.04	serve
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	fault.01	fault
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn.01	condemn
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg1(np)-arg0(np)-v(v)-arg2(rb)	think.01	think
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg1(np)-arg0(np)-v(v)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	force.01	force
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	wish.01	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	register.02	register
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg0(np)-v(v)-arg2(np)-arg1(np)	leave.12	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(rp)-arg1(np)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	press.01	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(np)	consider.02	consider
arg0(np)-v(v)-arg1(np)-arg2(pp)	respect.01	respect
arg1(np)-arg0(np)-v(v)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(vp)	hold.03	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	solve.01	solve
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	register.02	register
arg1(np)-arg0(np)-v(v)-arg2(pp)	require.01	require
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(wp)-arg0(np)-v(v)-arg1(np)	call.01	call
arg1(np)-arg0(np)-v(v)-arg2(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	learn.01	learn
arg0(np)-v(v)-arg1(np)-arg2(rb)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	breathe.01	breathe
arg0(np)-v(v)-arg1(np)-arg2(in)	breathe.01	breathe
arg2(wdt)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	educate.01	educate
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick.01	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish.01	punish
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(pp)-arg1(np)	request.01	request
arg0(np)-v(v)-arg1(np)-arg2(rp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg2(wrb)-arg0(np)-v(v)-arg1(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey.01	convey
arg2(wp)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	collect.01	collect
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	look.01	look
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	delay.01	delay
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	talk.02	talk
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg2(wdt)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(np)	elect.01	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	entrust.01	entrust
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	subject.01	subject
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.03	hold
arg0(np)-v(v)-arg1(np)-arg2(rb)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.03	hold
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-arg2(np)-v(v)-arg1(np)	finance.01	finance
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(advp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(vp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rp)	put.01	put
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	credit.01	credit
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(rb)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	define.01	define
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	consider.02	consider
arg0(np)-v(v)-arg1(np)-arg2(vp)	convince.01	convince
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
v(v)-arg1(np)-arg2(pp)-arg0(np)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide.01	guide
arg0(np)-v(v)-arg1(np)-arg2(sbar)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(sbar)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	level.03	level
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg2(rb)-arg1(np)	put.03	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	rent.01	rent
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(sbar)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	direct.01	direct
arg0(np)-v(v)-arg1(np)-arg2(pp)	incorporate.02	incorporate
arg2(wrb)-arg0(np)-v(v)-arg1(np)	appraise.01	appraise
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	declare.01	declare
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	rate.01	rate
arg0(np)-v(v)-arg1(np)-arg2(dt)	rate.01	rate
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg2(wrb)-arg0(np)-v(v)-arg1(np)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-arg2(rb)-v(v)-arg1(np)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	display.01	display
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg2(wrb)-arg0(np)-v(v)-arg1(np)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	represent.01	represent
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate.01	donate
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg2(pp)-arg0(np)-v(v)-arg1(np)	choose.01	choose
arg0(np)-v(v)-arg2(rp)-arg1(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	defer.01	defer
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(pp)-arg0(np)-v(v)-arg1(np)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	report.01	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	pin.01	pin
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(advp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(advp)	get.05	get
arg0(np)-v(v)-arg2(rb)-arg1(np)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(c("np", "np"))-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg2(c("s", "vp"))-arg0(np)-v(v)-arg1(np)	explore.01	explore
arg0(np)-v(v)-arg2(jj)-arg1(np)	hold.03	hold
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	hand.01	hand
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	blind.01	blind
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	install.01	install
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg2(np)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	recall.01	recall
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	leave.15	leave
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	steel.01	steel
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	infuse.01	infuse
arg0(np)-v(v)-arg1(np)-arg2(in)	get_out.07	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(pp)-arg0(np)-v(v)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg2(rp)-arg1(np)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	thrust.01	thrust
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict.01	convict
arg0(np)-v(v)-arg1(np)-arg2(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(advp)	take.01	take
v(v)-arg1(np)-arg2(pp)-arg0(np)	congratulate.01	congratulate
arg0(np)-v(v)-arg2(np)-arg1(np)	wish.01	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(np)	declare.01	declare
arg0(np)-v(v)-arg1(np)-arg2(pp)	congratulate.01	congratulate
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.04	join
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	guarantee.01	guarantee
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(vp)	push.02	push
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	appoint.01	appoint
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat.01	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(np)	promise.01	promise
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(s)	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	kill.01	kill
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(rp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	load.01	load
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	assign.01	assign
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	sentence.01	sentence
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
v(v)-arg1(np)-arg2(pp)-arg0(np)	put.01	put
arg0(np)-v(v)-arg2(in)-arg1(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(rb)	hold.03	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	close.01	close
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(advp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow.01	borrow
arg0(np)-v(v)-arg1(np)-arg2(rb)	shoot.03	shoot
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift.01	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	clean.01	clean
arg0(np)-v(v)-arg1(np)-arg2(pp)	recall.01	recall
arg0(np)-v(v)-arg1(np)-arg2(advp)	push.01	push
arg0(np)-v(v)-arg2(pp)-arg1(np)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide.01	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce.01	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	lead.01	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(sbar)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.04	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg2(rp)-arg1(np)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	roll.01	roll
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(vp)	push.02	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover.02	cover
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	track.01	track
arg0(np)-v(v)-arg1(np)-arg2(rp)	flip.01	flip
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	identify.01	identify
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	expel.01	expel
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg1(np)-arg0(np)-v(v)-arg2(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(rp)	see.02	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg2(np)-arg1(np)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(rb)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.04	join
arg0(np)-v(v)-arg1(np)-arg2(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect.01	connect
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore.01	restore
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(vp)	pressure.01	pressure
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(sbar)	notify.01	notify
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg2(pp)-arg1(np)	submit.01	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(c("np", "np"))-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.04	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate.01	donate
arg0(np)-v(v)-arg1(np)-arg2(pp)	liberate.01	liberate
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	waste.01	waste
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	conceal.01	conceal
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	call.02	call
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(sbar)	notify.01	notify
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(s)	pressure.01	pressure
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue.02	sue
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	license.01	license
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(adjp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.04	join
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	ask.01	ask
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick.01	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	clear.01	clear
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie.01	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.04	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	monitor.01	monitor
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	advise.01	advise
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	report.01	report
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	know.01	know
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.04	join
v(v)-arg1(np)-arg2(pp)-arg0(np)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(np)	sign.01	sign
arg1(np)-arg0(np)-v(v)-arg2(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift.01	shift
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	report.01	report
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(c("np", "np"))-arg1(np)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(vp)	leave.12	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	end.01	end
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	challenge.01	challenge
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg2(rp)-arg1(np)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	split.01	split
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey.01	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(jj)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	communicate.01	communicate
arg1(np)-arg0(np)-v(v)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg2(rb)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg1(np)-arg0(np)-v(v)-arg2(c("s", "np"))	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	subtract.01	subtract
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.01	put
arg0(np)-arg2(pp)-v(v)-arg1(np)	stop.01	stop
arg0(np)-v(v)-arg1(np)-arg2(advp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	rate.01	rate
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	attack.01	attack
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	address.01	address
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(rp)	talk.01	talk
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick.01	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat.03	beat
arg0(np)-arg2(whadvp)-v(v)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(vp)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg1(np)-arg0(np)-v(v)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	prolong.01	prolong
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	rescue.01	rescue
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide.01	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	redeploy.01	redeploy
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg2(pp)-arg1(np)	welcome.01	welcome
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(np)	elect.01	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	reelect.01	reelect
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg1(np)-arg0(np)-v(v)-arg2(pp)	inflict.01	inflict
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar.01	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	trap.01	trap
arg0(np)-v(v)-arg1(c("np", "np"))-arg2(pp)	send.01	send
arg0(c("np", "np", "qp"))-v(v)-arg1(np)-arg2(pp)	leave.11	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.19	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-arg2(rb)-v(v)-arg1(np)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-arg2(rb)-v(v)-arg1(np)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(advp)	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit.01	submit
arg0(np)-v(v)-arg2(pp)-arg1(np)	submit.01	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit.01	submit
arg0(np)-v(v)-arg2(rb)-arg1(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	confront.01	confront
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit.01	submit
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(s)	notify.01	notify
arg2(wrb)-arg0(np)-v(v)-arg1(np)	define.01	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	dispatch.01	dispatch
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit.02	submit
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(s)	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg1(np)-arg0(np)-v(v)-arg2(pp)	submit.01	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg2(pp)-arg1(np)	export.01	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	export.01	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(sbar)	promise.01	promise
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	wage.01	wage
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist.01	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	know.01	know
arg0(np)-v(v)-arg1(np)-arg2(pp)	influence.01	influence
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	compliment.01	compliment
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg2(rb)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(vp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn.01	condemn
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
v(v)-arg1(np)-arg2(pp)-arg0(np)	brief.01	brief
arg0(c("np", "np"))-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	coauthor.01	coAuthor
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	tailor.01	tailor
arg0(np)-v(v)-arg1(np)-arg2(vp)	push.02	push
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	pin.01	pin
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.02	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce.01	denounce
arg0(np)-v(v)-arg1(np)-arg2(vp)	pressure.01	pressure
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship.01	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	lead.01	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg1(np)-arg0(np)-v(v)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	press.01	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	position.01	position
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	recommend.01	recommend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	challenge.01	challenge
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	indict.01	indite
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce.01	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.04	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg2(pp)-arg1(np)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	ban.01	ban
arg0(np)-v(v)-arg1(np)-arg2(vp)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	hail.02	hail
arg0(np)-v(v)-arg1(np)-arg2(pp)	trounce.01	trounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	castigate.01	castigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray.01	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	spill.01	spill
arg0(np)-v(v)-arg1(np)-arg2(pp)	mistake.01	mistake
arg0(np)-v(v)-arg1(np)-arg2(pp)	mix.01	mix
arg0(np)-v(v)-arg1(np)-arg2(rb)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar.01	bar
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg2(rb)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(advp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	tear.01	tear
arg0(np)-v(v)-arg1(np)-arg2(pp)	resolve.01	resolve
arg0(np)-v(v)-arg1(np)-arg2(pp)	tear.01	tear
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(c("np", "np"))-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	nominate.01	nominate
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	confine.01	confine
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject.01	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject.01	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore.01	restore
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar.01	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	recover.02	recover
arg0(np)-v(v)-arg1(np)-arg2(pp)	tear.01	tear
arg0(np)-v(v)-arg1(np)-arg2(pp)	wage.01	wage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	snatch.01	snatch
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	call.02	call
arg0(np)-v(v)-arg1(np)-arg2(adjp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	congratulate.01	congratulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(rb)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore.01	restore
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	strip.01	strip
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	congratulate.01	congratulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(vp)	interpret.01	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	arrest.01	arrest
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(vp)	think.01	think
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(pp)-arg1(np)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.11	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject.01	inject
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	immunize.01	immunize
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(advp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict.01	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	identify.01	identify
arg0(np)-v(v)-arg1(np)-arg2(pp)	condition.01	condition
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg2(pp)-arg1(np)	postpone.01	postpone
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict.01	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	align.01	align
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(s)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	source.01	source
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze.02	squeeze
arg0(np)-arg2(wrb)-v(v)-arg1(np)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	dedicate.01	dedicate
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	inspect.01	inspect
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift.01	shift
v(v)-arg1(np)-arg2(pp)-arg0(np)	assist.01	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	shield.01	shield
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	collect.01	collect
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg1(np)-arg0(np)-v(v)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg1(np)-arg0(np)-v(v)-arg2(pp)	feel.01	feel
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg1(np)-arg0(np)-v(v)-arg2(pp)	learn.01	learn
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	wed.01	wed
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish.01	establish
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	ascribe.01	ascribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.03	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-arg2(pp)-v(v)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	tangle.01	tangle
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	dress.01	dress
arg0(np)-v(v)-arg1(np)-arg2(pp)	redefine.01	redefine
arg0(np)-v(v)-arg1(c("np", "np"))-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(vp)	empower.01	empower
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	deal.02	deal
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(v)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	hang.01	hang
arg0(np)-v(v)-arg1(np)-arg2(rp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	scare.01	scare
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	take.03	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.01	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
v(v)-arg1(np)-arg2(pp)-arg0(np)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	confer.02	confer
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
v(v)-arg1(np)-arg2(pp)-arg0(np)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass.05	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(rb)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude.01	exclude
arg0(np)-v(v)-arg1(np)-arg2(vp)	leave.15	leave
arg0(np)-v(v)-arg1(np)-arg2(vp)	leave.15	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
v(v)-arg1(np)-arg2(pp)-arg0(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(rb)	throw.01	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit.01	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	nominate.01	nominate
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	sling.01	sling
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg1(np)-arg0(np)-v(v)-arg2(np)	feed.01	feed
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	familiarize.01	familiarize
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	tutor.01	tutor
arg0(np)-v(v)-arg1(np)-arg2(pp)	mesh.01	mesh
arg0(np)-v(v)-arg2(np)-arg1(np)	save.01	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
v(v)-arg1(np)-arg2(pp)-arg0(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift.01	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	integrate.01	integrate
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg2(rp)-arg1(np)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	catch.03	catch
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	exchange.01	exchange
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg2(pp)-arg0(np)-v(v)-arg1(np)	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	seduce.01	seduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg1(np)-arg0(np)-v(v)-arg2(pp)	assign.01	assign
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	recover.02	recover
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow.01	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow.01	borrow
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(rb)	dispatch.01	dispatch
arg0(np)-v(v)-arg1(np)-arg2(pp)	hail.02	hail
arg0(np)-v(v)-arg1(np)-arg2(pp)	weigh.04	weigh
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
v(v)-arg1(np)-arg2(pp)-arg0(np)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	impress.01	impress
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass.01	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	commend.01	commend
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	compliment.01	compliment
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	rob.01	rob
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	open.01	open
arg0(np)-v(v)-arg2(pp)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(s)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(vp)	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(pp)-arg1(np)	convey.01	convey
arg0(np)-v(v)-arg1(np)-arg2(nn)	make.19	make
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(s)	inform.01	inform
arg1(np)-arg0(np)-v(v)-arg2(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(rp)	roll.01	roll
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	attract.01	attract
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	attract.01	attract
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow.01	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.19	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	post.01	post
arg0(np)-v(v)-arg2(rp)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	assist.01	assist
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	gain.02	gain
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	level.03	level
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg2(pp)-arg0(np)-v(v)-arg1(np)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	solve.01	solve
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	shed.03	shed
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg2(pp)-arg0(np)-v(v)-arg1(np)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-arg2(wrb)-v(v)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	lavish.01	lavish
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	appraise.01	appraise
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.01	take
v(v)-arg1(np)-arg2(pp)-arg0(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	close.01	close
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-arg2(rb)-v(v)-arg1(np)	display.01	display
arg0(np)-v(v)-arg1(np)-arg2(rb)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	extol.01	extoll
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	hand.01	hand
arg0(np)-v(v)-arg1(np)-arg2(pp)	investigate.01	investigate
arg0(np)-v(v)-arg1(np)-arg2(sbar)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	report.01	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(np)	appoint.01	appoint
v(v)-arg2(np)-arg1(np)-arg0(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg2(in)-arg1(np)	breathe.01	breathe
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	shape.01	shape
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	immerse.01	immerse
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	save.01	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	blind.01	blind
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	open.01	open
arg0(np)-v(v)-arg1(np)-arg2(pp)	target.01	target
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(adjp)	set.01	set
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	plate.01	plate
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg1(np)-arg0(np)-v(v)-arg2(np)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	bill.02	bill
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	hurt.01	hurt
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	scatter.01	scatter
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	install.01	instal
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(rb)	install.01	instal
arg0(np)-v(v)-arg1(np)-arg2(pp)	position.01	position
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
v(v)-arg1(np)-arg2(pp)-arg0(np)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	rush.01	rush
arg0(np)-v(v)-arg1(np)-arg2(pp)	credit.01	credit
arg0(np)-v(v)-arg1(np)-arg2(pp)	bury.01	bury
arg0(np)-v(v)-arg1(np)-arg2(advp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	produce.01	produce
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	examine.01	examine
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	polish.01	polish
arg0(np)-v(v)-arg1(np)-arg2(pp)	imagine.01	imagine
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	tap.01	tap
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	tap.01	tap
arg0(np)-v(v)-arg1(np)-arg2(pp)	carve.02	carve
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.01	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg2(c("s", "vp"))-arg0(np)-v(v)-arg1(np)	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	mix.01	mix
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg2(wrb)-arg0(np)-v(v)-arg1(np)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	sing.01	singe
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	elicit.01	elicit
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	leave.12	leave
v(v)-arg2(np)-arg1(np)-arg0(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.11	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(advp)	move.01	move
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
v(v)-arg1(np)-arg2(c("s", "vp"))-arg0(np)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	post.01	post
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	speak.01	speak
arg0(np)-v(v)-arg1(np)-arg2(np)	label.01	label
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	identify.01	identify
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	wreak.01	wreak
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	instruct.01	instruct
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg1(np)-arg0(np)-v(v)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.19	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
v(v)-arg1(np)-arg2(pp)-arg0(np)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(jj)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	exact.01	exact
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict.01	restrict
arg0(np)-v(v)-arg1(np)-arg2(pp)	attract.01	attract
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(v)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	budget.01	budget
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(np)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg2(np)-arg1(np)	earn.01	earn
arg0(np)-v(v)-arg1(np)-arg2(rb)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude.01	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	distance.01	distance
arg0(np)-v(v)-arg1(np)-arg2(pp)	open.01	open
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(sbar)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	embroil.01	embroil
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(sbar)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg2(np)-arg1(np)	deal.02	deal
arg0(np)-v(v)-arg1(np)-arg2(pp)	express.01	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg2(pp)-arg1(np)	prove.01	prove
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist.01	assist
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	infuse.01	infuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	kill.01	kill
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze.02	squeeze
arg0(np)-v(v)-arg1(np)-arg2(np)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	express.01	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	sacrifice.01	sacrifice
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(s)	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	entertain.01	entertain
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	close.01	close
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	welcome.01	welcome
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg2(pp)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	conform.01	conform
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	dismiss.02	dismiss
arg0(np)-v(v)-arg1(np)-arg2(pp)	liberate.01	liberate
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg1(np)-arg2(adjp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	pressure.01	pressure
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	block.01	block
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	flip.01	flip
arg0(np)-v(v)-arg1(np)-arg2(rb)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(sbar)	remember.01	remember
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg2(pp)-arg1(np)	sort.01	sort
arg0(np)-v(v)-arg1(np)-arg2(vp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	heat.01	heat
arg0(np)-v(v)-arg1(np)-arg2(np)	lift.01	lift
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunge.02	plunge
arg0(np)-v(v)-arg2(rp)-arg1(np)	get_out.07	get
arg0(np)-v(v)-arg1(np)-arg2(advp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	cram.01	cram
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg1(np)-arg0(np)-v(v)-arg2(advp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	block.01	block
arg0(np)-v(v)-arg1(np)-arg2(advp)	delay.01	delay
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie.01	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	trace.02	trace
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	trace.02	trace
arg0(np)-v(v)-arg1(np)-arg2(pp)	brief.01	brief
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply.01	supply
arg2(pp)-arg0(np)-v(v)-arg1(np)	offer.01	offer
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	battle.01	battle
arg0(np)-v(v)-arg1(np)-arg2(pp)	attract.01	attract
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply.01	supply
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	subject.01	subject
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(np)-arg1(c("np", "qp"))	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg2(np)-arg1(c("np", "qp"))	loan.01	loan
arg0(np)-v(v)-arg1(np)-arg2(pp)	indict.01	indict
arg0(np)-v(v)-arg1(np)-arg2(pp)	extort.01	extort
arg0(np)-v(v)-arg1(np)-arg2(pp)	muscle.01	muscle
arg0(np)-v(v)-arg1(np)-arg2(ucp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	jail.01	jail
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	lower.05	lower
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek.01	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	appeal.01	appeal
arg1(np)-arg0(np)-v(v)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	dip.02	dip
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.04	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	harm.01	harm
arg0(np)-v(v)-arg1(np)-arg2(pp)	deter.01	deter
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect.01	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek.01	seek
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire.01	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	catapult.01	catapult
arg0(np)-v(v)-arg1(np)-arg2(pp)	hurl.01	hurl
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	talk.02	talk
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude.01	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	alert.01	alert
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	oust.01	oust
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	loan.01	loan
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	embezzle.01	embezzle
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	examine.01	examine
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	direct.01	direct
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	sue.02	sue
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	outsell.01	outsell
arg0(np)-v(v)-arg1(np)-arg2(np)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(advp)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(rp)-arg1(np)	beat.02	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	alternate.01	alternate
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	initiate.01	initiate
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	equate.01	equate
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	refund.01	refund
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg1(np)-arg0(np)-v(v)-arg2(pp)	characterize.01	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	administer.01	administer
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(jj)	declare.01	declare
arg0(np)-v(v)-arg2(pp)-arg1(np)	excuse.01	excuse
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	enhance.01	enhance
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg2(np)-arg1(np)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	examine.01	examine
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	lord.01	lord
arg0(np)-v(v)-arg2(np)-arg1(np)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(sbar)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	employ.02	employ
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	flash.01	flash
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(c("np", "np"))-arg2(pp)	finagle.01	finagle
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
v(v)-arg1(np)-arg2(pp)-arg0(np)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(np)	allow.02	allow
arg0(np)-v(v)-arg2(pp)-arg1(np)	redefine.01	redefine
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(rb)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	clear.01	clear
arg0(np)-v(v)-arg1(np)-arg2(vp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(advp)	restate.02	restate
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	build.01	build
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	merge.01	merge
arg0(np)-v(v)-arg1(np)-arg2(pp)	lock.01	lock
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek.01	seek
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg1(np)-arg0(np)-v(v)-arg2(pp)	learn.01	learn
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg1(np)-arg0(np)-v(v)-arg2(pp)	solve.01	solve
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg2(rp)-arg1(np)	shove.01	shove
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.03	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	license.01	license
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	defend.01	defend
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray.01	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg2(np)-arg1(c("np", "qp"))	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	transplant.01	transplant
arg0(np)-v(v)-arg1(np)-arg2(pp)	license.01	license
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply.01	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	dissuade.01	dissuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	drop.05	drop
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	approve.01	approve
arg0(np)-v(v)-arg2(pp)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect.01	elect
arg0(np)-v(v)-arg1(np)-arg2(vp)	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	deny.01	deny
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg1(np)-arg0(np)-v(v)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(v)	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	price.01	price
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	value.01	value
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	design.01	design
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(np)	cut.02	cut
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
v(v)-arg1(np)-arg2(pp)-arg0(np)	replace.01	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	shave.01	shave
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise.02	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(rp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	reset.01	reset
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	signal.07	signal
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(advp)	walk.03	walk
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	tangle.01	tangle
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	sprinkle.01	sprinkle
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	build.02	build
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer.01	prefer
arg0(np)-v(v)-arg1(np)-arg2(pp)	require.01	require
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit.01	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	buffer.01	buffer
arg0(np)-v(v)-arg1(np)-arg2(pp)	castigate.01	castigate
arg0(np)-v(v)-arg1(np)-arg2(vp)	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	distract.01	distract
arg0(np)-v(v)-arg1(np)-arg2(pp)	deter.01	deter
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(rb)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	recover.02	recover
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.03	hold
arg0(np)-v(v)-arg1(np)-arg2(vp)	prod.01	prod
arg0(np)-v(v)-arg1(np)-arg2(pp)	incur.01	incur
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg1(np)-arg0(np)-v(v)-arg2(pp)	incur.01	incur
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	reap.01	reap
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	pit.01	pit
arg0(np)-v(v)-arg1(np)-arg2(v)	send.02	send
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	renounce.01	renounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
v(v)-arg1(np)-arg2(pp)-arg0(np)	transmit.01	transmit
arg2(c("s", "vp"))-arg0(np)-v(v)-arg1(np)	use.01	use
arg0(np)-v(v)-arg2(rp)-arg1(np)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	import.01	import
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	rally.01	rally
arg0(np)-v(v)-arg1(np)-arg2(pp)	investigate.01	investigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage.01	discourage
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	browbeat.01	browbeat
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose.01	expose
arg2(np)-arg0(np)-v(v)-arg1(np)	spare.01	spare
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	execute.02	execute
arg0(np)-v(v)-arg1(np)-arg2(pp)	execute.02	execute
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.01	stop
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify.01	notify
arg0(np)-v(v)-arg1(np)-arg2(rb)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg2(pp)-arg1(np)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie.01	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	intermix.01	intermix
arg0(np)-v(v)-arg1(np)-arg2(advp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate.01	donate
v(v)-arg1(np)-arg2(pp)-arg0(np)	base.02	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	work.07	work
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg2(pp)-arg1(np)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg2(np)-arg1(np)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.06	pull
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	promote.02	promote
arg0(np)-v(v)-arg1(np)-arg2(pp)	propel.01	propel
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(jj)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	inherit.01	inherit
arg0(np)-v(v)-arg1(np)-arg2(pp)	inherit.01	inherit
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	predispose.01	predispose
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue.02	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	halt.01	halt
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	level.03	level
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	preclude.01	preclude
arg0(np)-v(v)-arg2(pp)-arg1(np)	describe.01	describe
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	export.01	export
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect.01	connect
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	miss.02	miss
arg0(np)-v(v)-arg1(np)-arg2(pp)	miss.02	miss
arg0(np)-v(v)-arg1(np)-arg2(pp)	shock.01	shock
arg0(np)-v(v)-arg1(np)-arg2(pp)	value.01	value
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	form.01	form
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire.01	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	file.01	file
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	summon.01	summon
arg0(np)-v(v)-arg1(np)-arg2(rbr)	reduce.01	reduce
arg2(pp)-arg0(np)-v(v)-arg1(np)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.02	set
arg0(np)-v(v)-arg2(pp)-arg1(np)	transfer.01	transfer
arg0(np)-v(v)-arg2(np)-arg1(c("np", "qp"))	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	budget.01	budget
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	slash.02	slash
arg0(np)-v(v)-arg1(np)-arg2(pp)	castigate.01	castigate
v(v)-arg1(np)-arg2(pp)-arg0(np)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.03	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	prescribe.02	prescribe
arg0(np)-arg1(np)-v(v)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(vp)	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	yank.01	yank
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	rank.01	rank
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	derive.01	derive
arg0(np)-v(v)-arg1(np)-arg2(pp)	handle.01	handle
arg0(np)-v(v)-arg1(np)-arg2(pp)	exonerate.01	exonerate
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	thrust.01	thrust
arg0(np)-v(v)-arg1(np)-arg2(vp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	bully.01	bully
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	stun.01	stun
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	collect.01	collect
arg0(np)-v(v)-arg2(np)-arg1(np)	fine.01	fine
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	depict.01	depict
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	summon.01	summon
arg0(np)-v(v)-arg1(np)-arg2(pp)	radio.01	radio
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	chide.01	chide
arg0(np)-v(v)-arg1(np)-arg2(pp)	delegate.01	delegate
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg2(np)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	sublet.01	sublet
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	bribe.01	bribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	try.04	try
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.06	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase.01	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(sbar)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	list.01	list
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(np)	rename.01	rename
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer.01	prefer
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg2(in)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	pin.01	pin
arg0(np)-v(v)-arg1(np)-arg2(pp)	shove.01	shove
arg0(np)-v(v)-arg1(np)-arg2(vp)	move.03	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce.01	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray.01	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	flood.01	flood
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	saddle.01	saddle
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	judge.01	judge
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	ban.01	ban
arg1(np)-arg0(np)-v(v)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	hang.01	hang
arg0(np)-v(v)-arg1(np)-arg2(pp)	freeze.02	freeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise.01	advise
arg0(np)-v(v)-arg2(pp)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	instruct.01	instruct
arg0(np)-v(v)-arg1(np)-arg2(advp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(sbar)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(pp)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	blend.01	blend
arg1(np)-arg0(np)-v(v)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	meld.01	meld
arg0(np)-v(v)-arg1(np)-arg2(pp)	stamp.01	stamp
arg0(np)-v(v)-arg1(np)-arg2(pp)	infuse.01	infuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar.01	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(sbar)	notify.01	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(s)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.03	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-arg1(np)-v(v)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	funnel.01	funnel
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(pp)-arg1(np)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	expand.01	expand
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
v(v)-arg2(np)-arg1(np)-arg0(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	whip.01	whip
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	trim.02	trim
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue.02	sue
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	monitor.01	monitor
arg0(np)-v(v)-arg1(np)-arg2(pp)	conclude.02	conclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	embezzle.01	embezzle
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	embezzle.01	embezzle
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek.01	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(vp)	pressure.01	pressure
arg0(np)-v(v)-arg1(np)-arg2(pp)	stockpile.01	stockpile
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	steer.01	steer
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	wreak.01	wreak
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg2(np)-arg1(c("np", "qp"))	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise.02	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	coordinate.01	coordinate
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	comb.01	comb
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	distance.01	distance
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase.01	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-arg2(np)-v(v)-arg1(np)	cover.01	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	indict.01	indict
arg0(np)-v(v)-arg1(np)-arg2(pp)	block.01	block
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	amend.01	amend
arg0(np)-v(v)-arg1(np)-arg2(pp)	press.01	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret.01	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	approve.01	approve
arg0(np)-v(v)-arg1(np)-arg2(pp)	attract.01	attract
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.01	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	portend.01	portend
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	line.01	line
arg0(np)-v(v)-arg1(np)-arg2(pp)	propel.01	propel
arg0(np)-v(v)-arg1(np)-arg2(rb)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(rb)	lower.05	lower
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	trim.02	trim
arg0(np)-v(v)-arg1(np)-arg2(np)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg2(np)-arg0(np)-v(v)-arg1(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	detect.01	detect
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg2(pp)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(advp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(np)	lose.04	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(sbar)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	scour.02	scour
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(rp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(s)	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	freeze.01	freeze
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	rescue.01	rescue
arg0(np)-v(v)-arg1(np)-arg2(pp)	ally.01	ally
arg0(np)-v(v)-arg1(np)-arg2(pp)	depict.01	depict
arg0(np)-v(v)-arg1(np)-arg2(pp)	hoodwink.01	hoodwink
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(np)	entitle.02	entitle
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg2(np)-arg1(np)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch.01	switch
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover.02	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	reopen.01	reopen
arg0(np)-v(v)-arg1(np)-arg2(np)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch.01	switch
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch.01	switch
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	bridge.01	bridge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(v)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	solve.01	solve
arg0(np)-v(v)-arg2(pp)-arg1(np)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(np)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	start.01	start
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	require.01	require
v(v)-arg1(np)-arg2(pp)-arg0(np)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	catch.03	catch
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(vp)	induce.01	induce
arg0(np)-v(v)-arg1(np)-arg2(pp)	pluck.01	pluck
v(v)-arg1(np)-arg2(pp)-arg0(np)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose.01	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg2(np)-arg1(np)	earn.01	earn
arg0(np)-v(v)-arg2(np)-arg1(np)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	demand.01	demand
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	earmark.01	earmark
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	couch.01	couch
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(rb)	take.03	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	define.01	define
arg1(np)-arg0(np)-v(v)-arg2(pp)	pose.02	pose
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	steer.01	steer
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	drop.05	drop
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore.01	restore
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	sweep.01	sweep
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	charter.01	charter
arg0(np)-v(v)-arg2(rb)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	pack.01	pack
arg0(np)-v(v)-arg1(np)-arg2(pp)	assign.01	assign
arg0(np)-v(v)-arg2(np)-arg1(np)	find.01	find
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg1(np)-arg0(np)-v(v)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	sue.02	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(adjp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	read.01	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.02	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	bury.01	bury
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	heap.01	heap
arg0(np)-v(v)-arg1(np)-arg2(pp)	cushion.01	cushion
arg0(np)-v(v)-arg2(np)-arg1(c("np", "qp"))	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg1(np)-arg0(np)-v(v)-arg2(pp)	inject.01	inject
arg0(np)-v(v)-arg1(np)-arg2(sbar)	satisfy.02	satisfy
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	adjust.01	adjust
arg2(wp)-arg0(np)-v(v)-arg1(np)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	advise.01	advise
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	elevate.01	elevate
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose.01	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	doom.01	doom
arg0(np)-v(v)-arg1(np)-arg2(pp)	conceal.01	conceal
arg0(np)-v(v)-arg1(np)-arg2(pp)	model.01	model
arg0(np)-v(v)-arg1(np)-arg2(pp)	collect.01	collect
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect.01	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg2(pp)-arg1(np)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	allocate.01	allocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit.01	commit
arg0(np)-v(v)-arg2(pp)-arg1(np)	defer.01	defer
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(jj)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	confront.01	confront
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	restore.01	restore
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	amend.01	amend
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	modify.01	modify
arg0(np)-v(v)-arg1(np)-arg2(np)	answer.01	answer
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	solicit.01	solicit
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(sbar)	reassure.01	reassure
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	credit.01	credit
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg1(np)-arg0(np)-v(v)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg1(np)-arg0(np)-v(v)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	transmit.01	transmit
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey.01	convey
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(vp)	prod.01	prod
arg0(np)-v(v)-arg1(np)-arg2(pp)	lambaste.01	lambaste
v(v)-arg1(np)-arg2(pp)-arg0(np)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.02	name
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-arg1(np)-v(v)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	drop.05	drop
arg0(np)-v(v)-arg1(np)-arg2(pp)	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.01	hold
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	enlist.01	enlist
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	package.01	package
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	call.02	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.02	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	bequeath.01	bequeath
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrain.01	restrain
arg1(np)-arg0(np)-v(v)-arg2(s)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg2(np)-arg1(np)	deny.01	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg1(np)-arg0(np)-v(v)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg1(np)-arg0(np)-v(v)-arg2(pp)	pass.05	pass
arg1(np)-arg0(np)-v(v)-arg2(pp)	exert.01	exert
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize.01	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrestle.03	wrestle
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	adorn.01	adorn
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	instruct.01	instruct
arg0(np)-v(v)-arg1(np)-arg2(sbar)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	equate.01	equate
arg2(pp)-arg0(np)-v(v)-arg1(np)	display.01	display
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	subject.01	subject
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	pin.01	pin
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(sbar)	alert.01	alert
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	clean.01	clean
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	couch.01	couch
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	disqualify.01	disqualify
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	leave.15	leave
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg2(pp)-arg1(np)	freeze.01	freeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg1(np)-arg0(np)-v(v)-arg2(pp)	supply.01	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	mislead.01	mislead
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg1(np)-arg0(np)-v(v)-arg2(np)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	earn.01	earn
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	fit.01	fit
arg0(np)-v(v)-arg1(np)-arg2(pp)	stun.01	stun
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	order.01	order
arg2(pp)-arg0(np)-v(v)-arg1(np)	implant.01	implant
arg2(advp)-arg0(np)-v(v)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(np)	run.04	run
arg1(np)-arg0(np)-v(v)-arg2(pp)	design.01	design
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish.01	establish
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.01	lease
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray.01	portray
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(advp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg2(rp)-arg1(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	finance.01	finance
arg0(np)-v(v)-arg1(np)-arg2(sbar)	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze.02	squeeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	insert.01	insert
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore.01	restore
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg2(np)-arg1(np)	allow.02	allow
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret.01	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-arg1(c("np", "np", "qp"))-v(v)-arg2(pp)	invest.01	invest
arg0(np)-arg1(c("np", "qp"))-v(v)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(sbar)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	attack.01	attack
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	blast.02	blast
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	rally.01	rally
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	transmit.01	transmit
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	fold.03	fold
arg0(np)-v(v)-arg2(pp)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-arg2(wrb)-v(v)-arg1(np)	address.02	address
arg0(np)-v(v)-arg1(np)-arg2(pp)	lecture.01	lecture
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(rp)-arg1(np)	beat.02	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	earmark.01	earmark
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	list.01	list
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	discount.02	discount
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize.01	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	approve.01	approve
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg2(pp)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(sbar)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	pose.02	pose
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	define.01	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	value.01	value
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	inflict.01	inflict
arg0(np)-v(v)-arg1(np)-arg2(pp)	block.01	block
arg0(np)-v(v)-arg1(np)-arg2(pp)	outbid.01	outbid
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.03	put
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(adjp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	monitor.01	monitor
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(c("np", "np"))-v(v)-arg1(np)-arg2(pp)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	beat.03	beat
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	know.01	know
arg0(np)-v(v)-arg1(np)-arg2(s)	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	frame.02	frame
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit.01	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	design.01	design
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	display.01	display
arg0(np)-v(v)-arg1(np)-arg2(pp)	bode.01	bode
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(adjp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	contrast.01	contrast
arg0(np)-v(v)-arg1(np)-arg2(vp)	dispatch.01	dispatch
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg2(pp)-arg0(np)-v(v)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg1(np)-arg0(np)-v(v)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	define.01	define
arg1(np)-arg0(np)-v(v)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	inspire.01	inspire
arg0(np)-v(v)-arg1(np)-arg2(v)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(rp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	peg.01	peg
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose.01	expose
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	aggravate.01	aggravate
arg0(np)-v(v)-arg1(np)-arg2(pp)	price.01	price
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg2(in)-arg1(np)	factor.01	factor
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	create.01	create
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(rp)-arg1(np)	smuggle.01	smuggle
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap.01	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	stash.01	stash
arg0(np)-v(v)-arg1(np)-arg2(pp)	burden.01	burden
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	amend.01	amend
arg1(np)-arg0(np)-v(v)-arg2(c("s", "np"))	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg1(np)-arg0(np)-v(v)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	omit.01	omit
arg0(np)-v(v)-arg1(np)-arg2(pp)	assign.01	assign
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	lambaste.01	lambaste
arg0(np)-v(v)-arg1(np)-arg2(pp)	bill.02	bill
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(rp)	beat.01	beat
arg0(np)-v(v)-arg1(np)-arg2(vp)	convince.01	convince
arg0(np)-v(v)-arg2(np)-arg1(np)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	hail.02	hail
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(rp)	beat.02	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg1(np)-arg2(rp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	strike.01	strike
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	absolve.01	absolve
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
v(v)-arg1(np)-arg2(pp)-arg0(np)	convert.01	convert
arg2(wp)-arg0(np)-v(v)-arg1(np)	commit.01	commit
arg0(np)-v(v)-arg2(rp)-arg1(np)	roll.01	roll
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(s)	urge.01	urge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	gain.02	gain
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	cushion.01	cushion
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	amend.01	amend
arg0(np)-v(v)-arg1(np)-arg2(pp)	split.01	split
arg0(np)-v(v)-arg2(np)-arg1(np)	accord.01	accord
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist.01	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	slash.02	slash
arg0(np)-v(v)-arg1(np)-arg2(pp)	deplete.01	deplete
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg2(pp)-arg0(np)-v(v)-arg1(np)	represent.01	represent
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(vp)	judge.01	judge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(pp)-arg1(np)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(sbar)	promise.01	promise
arg1(np)-arg0(np)-v(v)-arg2(pp)	value.01	value
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	knock_down.02	knock
arg0(np)-v(v)-arg1(np)-arg2(pp)	break.01	break
arg0(np)-v(v)-arg1(np)-arg2(vp)	induce.01	induce
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrestle.02	wrestle
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	shove.01	shove
arg0(np)-v(v)-arg2(np)-arg1(np)	will.01	will
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg2(np)-arg1(np)	wish.01	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hide.01	hide
arg0(np)-v(v)-arg2(pp)-arg1(np)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(np)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg0(np)-v(v)-arg1(np)-arg2(advp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	sentence.01	sentence
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	reconstruct.01	reconstruct
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage.01	discourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg1(c("np", "np"))-arg0(np)-v(v)-arg2(pp)	raise.02	raise
v(v)-arg2(rp)-arg1(np)-arg0(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	lower.05	lower
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(adjp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.03	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	sprawl.01	sprawl
arg0(np)-v(v)-arg1(np)-arg2(pp)	hang.01	hang
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-arg2(rb)-v(v)-arg1(np)	weaken.01	weaken
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	incur.01	incur
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg1(np)-arg0(np)-v(v)-arg2(rp)	set.01	set
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	raise.02	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	attack.01	attack
arg0(np)-v(v)-arg2(pp)-arg1(np)	report.01	report
arg0(np)-v(v)-arg2(pp)-arg1(np)	obscure.01	obscure
arg0(np)-v(v)-arg1(np)-arg2(pp)	indict.01	indict
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	curry.02	curry
arg0(np)-v(v)-arg1(np)-arg2(pp)	familiarize.01	familiarize
arg0(np)-v(v)-arg1(np)-arg2(pp)	refocus.01	refocus
arg0(np)-v(v)-arg1(np)-arg2(pp)	pave.02	pave
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish.01	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage.01	discourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.01	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize.01	characterize
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	carry.01	carry
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	pile.01	pile
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(sbar)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-arg2(np)-v(v)-arg1(np)	beat.01	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek.01	seek
arg0(np)-v(v)-arg2(np)-arg1(np)	deny.01	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	adapt.01	adapt
arg0(np)-v(v)-arg1(np)-arg2(pp)	insert.01	insert
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	seek.01	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	defraud.01	defraud
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(jj)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	extricate.01	extricate
arg0(np)-v(v)-arg1(np)-arg2(pp)	hurl.01	hurl
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg2(pp)-arg0(np)-v(v)-arg1(np)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(jjr)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply.01	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg2(pp)-arg1(np)	file.01	file
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(vp)	prod.01	prod
arg0(np)-arg2(pp)-v(v)-arg1(np)	install.01	instal
arg0(np)-v(v)-arg1(np)-arg2(pp)	feed.01	feed
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg2(rp)-arg1(c("np", "qp"))	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage.02	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	stimulate.01	stimulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	export.01	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	target.01	target
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(np)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(np)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute.01	distribute
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	gather.01	gather
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.01	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(np)	label.01	label
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	purge.01	purge
arg0(np)-v(v)-arg1(np)-arg2(jj)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue.02	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg2(np)-arg1(np)	allow.02	allow
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply.01	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	redesign.01	redesign
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	boost.01	boost
arg0(np)-v(v)-arg2(np)-arg1(np)	mail.01	mail
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	practice.01	practice
arg0(np)-v(v)-arg1(np)-arg2(pp)	preregister.01	preRegister
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	test.01	test
arg0(np)-v(v)-arg2(pp)-arg1(np)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	maneuver.01	maneuver
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(advp)	shuffle.02	shuffle
arg0(np)-v(v)-arg1(np)-arg2(pp)	maneuver.01	maneuver
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose.01	expose
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer.02	refer
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	pitch.04	pitch
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg2(pp)-arg1(np)	imagine.01	imagine
arg0(np)-v(v)-arg1(np)-arg2(np)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	ally.01	ally
arg2(c("s", "vp"))-arg0(np)-v(v)-arg1(np)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	assimilate.01	assimilate
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	disengage.01	disengage
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(c("np", "qp"))	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute.01	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute.01	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg1(np)-arg0(np)-v(v)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar.01	bar
arg0(np)-v(v)-arg1(np)-arg2(sbar)	inform.01	inform
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect.01	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue.02	sue
arg0(np)-v(v)-arg2(pp)-arg1(np)	underestimate.01	underestimate
arg0(np)-v(v)-arg1(np)-arg2(advp)	boost.01	boost
arg1(np)-arg0(np)-v(v)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg1(np)-arg0(np)-v(v)-arg2(pp)	seek.01	seek
arg0(np)-v(v)-arg1(np)-arg2(vp)	inspire.01	inspire
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg2(np)-arg1(np)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg1(np)-arg0(np)-v(v)-arg2(pp)	gain.02	gain
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	enjoin.01	enjoin
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	control.01	control
arg0(np)-v(v)-arg1(np)-arg2(pp)	choose.01	choose
arg0(np)-v(v)-arg2(rp)-arg1(np)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	siphon.01	siphon
arg0(np)-v(v)-arg1(np)-arg2(rb)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	read.01	read
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg1(np)-arg0(np)-v(v)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	pit.01	pit
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	file.01	file
arg0(np)-v(v)-arg1(np)-arg2(pp)	display.01	display
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	misrepresent.01	misrepresent
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift.01	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	peg.01	peg
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase.01	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	spray.01	spray
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	match.01	match
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify.01	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	assail.01	assail
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg2(rp)-arg1(c("np", "qp"))	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute.01	distribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	seize.01	seize
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	volunteer.01	volunteer
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce.01	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	ensure.01	ensure
arg0(np)-v(v)-arg1(np)-arg2(vp)	compel.01	compel
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	direct.01	direct
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize.01	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	drop.07	drop
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	staple.01	staple
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
v(v)-arg2(np)-arg1(np)-arg0(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(v)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie.01	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	sue.02	sue
arg0(np)-v(v)-arg1(np)-arg2(pp)	translate.01	translate
arg0(np)-v(v)-arg1(np)-arg2(pp)	split.01	split
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg2(in)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	gain.02	gain
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	applaud.01	applaud
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	counter.01	counter
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel.02	feel
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	position.01	position
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg2(rp)-arg1(np)	switch.01	switch
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	split.01	split
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate.01	donate
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	prove.01	prove
arg0(np)-v(v)-arg1(np)-arg2(rp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	compliment.01	compliment
arg1(np)-arg0(np)-v(v)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	split.01	split
arg1(np)-arg0(np)-v(v)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict.01	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict.01	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	pack.01	pack
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	build.01	build
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow.01	borrow
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	funnel.01	funnel
arg0(np)-v(v)-arg2(pp)-arg1(np)	steer.01	steer
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	request.01	request
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	chastise.01	chastise
arg0(np)-v(v)-arg1(np)-arg2(pp)	judge.01	judge
arg0(np)-v(v)-arg1(np)-arg2(pp)	trace.02	trace
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	structure.01	structure
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	deny.01	deny
arg0(np)-arg2(rb)-v(v)-arg1(np)	weaken.01	weaken
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(rb)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.06	pull
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	justify.01	justify
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	distance.01	distance
arg0(np)-v(v)-arg1(np)-arg2(pp)	position.01	position
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	promote.02	promote
arg0(np)-v(v)-arg1(np)-arg2(pp)	swap.01	swap
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	route.01	route
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	steer.01	steer
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	start.01	start
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tout.01	tout
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	lure.01	lure
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer.02	refer
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer.02	refer
arg0(np)-v(v)-arg1(np)-arg2(pp)	extort.01	extort
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict.01	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	try.04	try
arg0(np)-v(v)-arg1(np)-arg2(pp)	popularize.01	popularize
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect.01	connect
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	add.02	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	shield.01	shield
arg0(np)-v(v)-arg1(np)-arg2(pp)	cushion.01	cushion
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg2(adjp)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(advp)	plant.01	plant
arg0(np)-v(v)-arg1(np)-arg2(vp)	move.03	move
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(vp)	admonish.01	admonish
arg0(np)-v(v)-arg1(np)-arg2(pp)	rub.01	rub
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant.01	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	recruit.01	recruit
arg0(np)-v(v)-arg2(rb)-arg1(np)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	extort.01	extort
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	channel.01	channel
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect.01	elect
arg0(np)-v(v)-arg1(np)-arg2(vp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(sbar)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
v(v)-arg1(np)-arg2(pp)-arg0(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	price.01	price
arg0(np)-v(v)-arg1(np)-arg2(vp)	induce.01	induce
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(adjp)	tug.03	tug
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	deal.02	deal
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(s)	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spill.01	spill
arg0(np)-v(v)-arg1(np)-arg2(pp)	file.01	file
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	learn.01	learn
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(advp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(vp)	prep.01	preppe
arg0(np)-v(v)-arg1(np)-arg2(np)	increase.01	increase
arg2(pp)-v(v)-arg0(np)-arg1(np)	represent.01	represent
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	cede.01	cede
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg1(np)-arg0(np)-v(v)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	justify.01	justify
arg0(np)-v(v)-arg1(np)-arg2(pp)	transmit.01	transmit
arg0(np)-v(v)-arg1(np)-arg2(pp)	order.02	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	exempt.01	exempt
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg2(np)-arg1(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	bribe.01	bribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(advp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	funnel.01	funnel
arg0(np)-v(v)-arg1(np)-arg2(pp)	chastise.01	chastise
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	enlist.01	enlist
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	denounce.01	denounce
arg0(np)-v(v)-arg1(np)-arg2(pp)	earn.01	earn
arg2(wrb)-arg0(np)-v(v)-arg1(np)	store.01	store
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick.01	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg2(rb)-arg1(np)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	distance.01	distance
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift.01	shift
arg0(np)-v(v)-arg1(np)-arg2(np)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(np)	boost.01	boost
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore.01	restore
arg0(np)-v(v)-arg1(np)-arg2(np)	raise.01	raise
v(v)-arg1(np)-arg2(c("s", "vp"))-arg0(np)	persuade.01	persuade
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	feature.01	feature
arg0(np)-v(v)-arg1(np)-arg2(advp)	outpace.01	outpace
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(rbr)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(sbar)	notify.01	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	disclose.01	disclose
arg0(np)-v(v)-arg2(pp)-arg1(np)	read.01	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	shave.01	shave
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg1(np)-arg0(np)-v(v)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant.01	grant
arg2(whnp)-arg0(np)-v(v)-arg1(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(vp)	hire.01	hire
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify.01	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	disclose.01	disclose
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict.01	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict.01	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	extort.01	extort
arg0(np)-v(v)-arg1(np)-arg2(pp)	convict.01	convict
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	dedicate.01	dedicate
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunge.02	plunge
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow.01	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	shield.01	shield
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	recover.02	recover
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer.01	prefer
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze.02	squeeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg2(pp)-arg1(np)	boost.01	boost
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-arg2(rb)-v(v)-arg1(np)	outperform.01	outperform
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose.01	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	chide.01	chide
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunge.02	plunge
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	build.02	build
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	enroll.01	enrol
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(pp)-arg1(np)	reveal.01	reveal
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	shove.01	shove
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray.01	portray
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.03	save
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(advp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	lend.01	lend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(rb)-arg1(np)	set.01	set
arg0(np)-arg2(rbr)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	prod.01	prod
arg0(np)-v(v)-arg2(rb)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	omit.01	omit
arg0(np)-v(v)-arg1(np)-arg2(pp)	foul.01	foul
arg0(np)-v(v)-arg1(np)-arg2(pp)	offset.01	offset
arg0(np)-v(v)-arg1(np)-arg2(pp)	build.03	build
arg0(np)-v(v)-arg1(np)-arg2(pp)	assign.01	assign
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	reinvest.01	reinveste
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	derive.01	derive
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute.01	distribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	reclassify.01	reclassify
arg0(np)-v(v)-arg1(np)-arg2(pp)	list.01	list
arg0(np)-v(v)-arg1(np)-arg2(np)	assess.01	assess
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	assess.01	assess
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	collect.01	collect
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	squeeze.02	squeeze
arg0(np)-v(v)-arg2(pp)-arg1(np)	decrease.01	decrease
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(advp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	embellish.01	embellish
arg0(np)-v(v)-arg1(np)-arg2(pp)	insulate.01	insulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	phone.01	phone
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	counter.01	counter
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	ingratiate.01	ingratiate
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	charge.01	charge
arg0(np)-v(v)-arg2(np)-arg1(np)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	cloak.01	cloak
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
v(v)-arg1(np)-arg2(pp)-arg0(np)	project.01	project
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	exempt.01	exempt
arg0(np)-v(v)-arg1(np)-arg2(pp)	market.01	market
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(c("np", "np"))-v(v)-arg2(pp)-arg1(np)	enlarge.01	enlarge
arg1(np)-arg0(np)-v(v)-arg2(np)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	survey.01	survey
arg0(np)-v(v)-arg1(np)-arg2(vp)	sensitize.01	sensitize
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	save.01	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	shoot.01	shoot
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg0(np)-v(v)-arg1(np)-arg2(adjp)	call.01	call
v(v)-arg1(np)-arg2(pp)-arg0(np)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	glut.01	glut
arg0(np)-v(v)-arg1(np)-arg2(rb)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(advp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(advp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose.01	expose
arg0(np)-v(v)-arg1(np)-arg2(sbar)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute.01	distribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	exploit.01	exploit
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	press.01	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg1(np)-arg0(np)-v(v)-arg2(pp)	produce.01	produce
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	press.01	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	display.01	display
arg0(np)-v(v)-arg1(np)-arg2(pp)	confiscate.01	confiscate
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish.01	establish
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	steer.01	steer
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	process.01	process
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek.01	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg1(np)-arg0(np)-v(v)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	subordinate.01	subordinate
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	decribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg2(pp)-arg0(np)-v(v)-arg1(np)	aggravate.01	aggravate
arg0(np)-v(v)-arg1(np)-arg2(pp)	hurt.01	hurt
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
v(v)-arg1(np)-arg2(pp)-arg0(np)	appoint.01	appoint
arg0(np)-v(v)-arg1(np)-arg2(pp)	match.01	match
arg0(np)-v(v)-arg1(np)-arg2(pp)	retool.01	retool
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate.01	donate
arg0(np)-v(v)-arg2(rb)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	read.01	read
arg0(np)-v(v)-arg2(rb)-arg1(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(advp)	pull.01	pull
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	thrust.01	thrust
arg0(np)-v(v)-arg1(np)-arg2(pp)	learn.01	learn
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg1(np)-arg0(np)-v(v)-arg2(c("s", "np"))	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(sbar)	advise.01	advise
arg0(np)-v(v)-arg2(rb)-arg1(np)	force.01	force
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide.01	guide
arg0(np)-arg2(rb)-v(v)-arg1(np)	outperform.01	outperform
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
v(v)-arg1(np)-arg2(pp)-arg0(np)	lure.01	lure
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg2(pp)-arg1(np)	exclude.01	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase.01	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg1(np)-arg0(np)-v(v)-arg2(pp)	associate.01	associate
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(c("np", "np"))-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(vp)	pressure.01	pressure
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	recommend.01	recommend
arg0(np)-v(v)-arg1(np)-arg2(pp)	wreak.01	wreak
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit.01	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.02	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	position.01	position
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	ratify.01	ratify
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict.01	restrict
arg0(np)-v(v)-arg1(np)-arg2(pp)	prod.01	prod
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	liken.03	liken
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	target.01	target
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	pose.02	pose
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	direct.01	direct
arg1(np)-arg0(np)-v(v)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	safeguard.01	safeguard
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(vp)	order.01	order
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase.01	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(s)	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg1(np)-arg0(np)-v(v)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	track.01	track
arg0(np)-v(v)-arg1(np)-arg2(vp)	weigh.01	weigh
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	sue.02	sue
arg1(np)-arg0(np)-v(v)-arg2(pp)	import.01	import
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg2(rb)-arg1(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
v(v)-arg1(np)-arg2(rb)-arg0(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(advp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg1(np)-arg2(vp)	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose.01	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg2(np)-arg1(np)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.02	see
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute.01	distribute
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	equip.01	equip
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.04	lose
arg0(np)-v(v)-arg1(np)-arg2(sbar)	educate.01	educate
arg0(np)-v(v)-arg1(np)-arg2(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute.01	contribute
arg2(pp)-arg0(np)-v(v)-arg1(np)	represent.01	represent
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-arg2(rb)-v(v)-arg1(np)	increase.01	increase
arg0(np)-v(v)-arg2(rb)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	translate.01	translate
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg1(np)-arg0(np)-v(v)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	allocate.01	allocate
arg1(np)-arg0(np)-v(v)-arg2(pp)	display.01	display
arg0(np)-v(v)-arg2(pp)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg2(pp)-arg1(np)	defer.01	defer
arg0(np)-v(v)-arg1(np)-arg2(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	wage.01	wage
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	spill.01	spill
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel.01	feel
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	report.01	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap.01	wrap
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	bribe.01	bribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg2(rp)-arg1(np)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	relocate.01	relocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	prod.01	prod
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg2(pp)-arg1(np)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
v(v)-arg1(c("np", "qp"))-arg2(pp)-arg0(np)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	halt.02	halt
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	appeal.01	appeal
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	airlift.01	airlift
arg0(np)-v(v)-arg1(np)-arg2(pp)	disassociate.01	disassociate
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.03	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(np)	title.01	title
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	slash.01	slash
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	install.01	install
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.01	lease
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify.01	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	export.01	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg2(wrb)-arg0(np)-v(v)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	derive.01	derive
arg0(np)-arg2(rb)-v(v)-arg1(np)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	hold.03	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude.01	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(s)	urge.01	urge
arg1(np)-arg0(np)-v(v)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	integrate.01	integrate
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(c("np", "np"))-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	perform.01	perform
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	constrain.01	constrain
arg0(np)-v(v)-arg1(np)-arg2(pp)	license.01	license
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.19	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	scoot.01	scoot
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-arg2(rb)-v(v)-arg1(np)	weaken.01	weaken
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	block.01	block
arg0(np)-v(v)-arg1(np)-arg2(rp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	peg.01	peg
arg0(np)-v(v)-arg1(np)-arg2(pp)	reclassify.01	reclassify
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(rb)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	reinvest.01	reinvest
arg0(np)-v(v)-arg1(np)-arg2(pp)	embrace.01	embrace
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	incorporate.02	incorporate
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg2(wrb)-arg0(np)-v(v)-arg1(np)	interpret.01	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret.01	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret.01	interpret
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
v(v)-arg1(np)-arg2(pp)-arg0(np)	advise.01	advise
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	counter.01	counter
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray.01	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(adjp)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(np)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	rain.01	rain
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	stir.03	stir
arg0(np)-v(v)-arg1(np)-arg2(pp)	tag.01	tag
arg0(np)-v(v)-arg1(np)-arg2(pp)	boost.01	boost
arg0(np)-v(v)-arg2(pp)-arg1(np)	count.02	count
arg0(np)-v(v)-arg1(np)-arg2(pp)	boost.01	boost
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg1(np)-arg2(rb)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
v(v)-arg1(np)-arg2(pp)-arg0(np)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	spew.01	spew
arg0(np)-v(v)-arg1(np)-arg2(pp)	lift.01	lift
arg0(np)-v(v)-arg1(np)-arg2(pp)	release.01	release
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	collect.01	collect
arg0(np)-v(v)-arg1(np)-arg2(pp)	refinance.02	refinance
arg0(np)-v(v)-arg2(np)-arg1(np)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(v)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	label.01	label
arg0(np)-v(v)-arg1(np)-arg2(pp)	defer.01	defer
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	waive.01	waive
arg0(np)-v(v)-arg1(np)-arg2(vp)	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	staff.01	staff
arg0(np)-arg2(pp)-v(v)-arg1(np)	begin.01	begin
arg0(np)-v(v)-arg1(np)-arg2(pp)	retrofit.01	retrofit
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg2(rp)-arg1(np)	factor.01	factor
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	list.01	list
arg0(np)-v(v)-arg1(np)-arg2(pp)	dignify.01	dignify
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	inspect.01	inspect
arg0(np)-v(v)-arg1(np)-arg2(pp)	spare.01	spare
arg0(np)-v(v)-arg1(np)-arg2(pp)	install.01	instal
arg0(np)-v(v)-arg1(np)-arg2(pp)	dispatch.01	dispatch
arg0(np)-v(v)-arg1(np)-arg2(adjp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass.05	pass
v(v)-arg1(np)-arg2(pp)-arg0(np)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(in)	stick.01	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	play.11	play
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	approach.02	approach
arg0(np)-v(v)-arg1(np)-arg2(pp)	console.01	console
arg0(np)-v(v)-arg2(rb)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	fine.01	fine
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(advp)	create.01	create
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship.01	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship.01	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	export.01	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	designate.01	designate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept.01	accept
arg0(np)-v(v)-arg2(np)-arg1(np)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	steer.01	steer
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	reclaim.01	reclaim
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.01	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	value.01	value
arg0(np)-v(v)-arg1(np)-arg2(pp)	reckon.01	reckon
arg0(np)-v(v)-arg1(np)-arg2(pp)	consult.01	consult
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.01	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	reassign.01	reassign
arg0(np)-v(v)-arg1(np)-arg2(pp)	reroute.01	reroute
arg0(np)-v(v)-arg1(np)-arg2(pp)	execute.02	execute
arg0(np)-v(v)-arg1(np)-arg2(pp)	execute.02	execute
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(c("np", "np"))-v(v)-arg1(np)-arg2(pp)	restore.01	restore
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	tout.01	tout
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	cross.04	cross
arg0(np)-v(v)-arg1(np)-arg2(pp)	shave.01	shave
arg0(np)-v(v)-arg1(np)-arg2(pp)	want.01	want
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	claim.01	claim
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	charter.01	charter
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	exonerate.01	exonerate
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg2(np)-arg0(np)-v(v)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	coax.01	coax
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift.01	shift
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar.01	bar
arg0(np)-v(v)-arg2(pp)-arg1(np)	exclude.01	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg2(pp)-arg1(np)	exclude.01	exclude
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(c("np", "np"))-v(v)-arg1(np)-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg1(np)-arg0(np)-v(v)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(np)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	top.01	top
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	project.02	project
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase.01	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	require.01	require
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	direct.01	direct
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	dispatch.01	dispatch
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	push.02	push
arg0(np)-v(v)-arg1(np)-arg2(sbar)	alert.01	alert
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	consolidate.01	consolidate
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	congratulate.01	congratulate
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg1(np)-arg0(np)-v(v)-arg2(pp)	gain.02	gain
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(vp)	spend.02	spend
arg1(np)-arg0(np)-v(v)-arg2(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	extract.01	extract
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie.01	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap.01	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	clutter.01	clutter
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(rb)-arg1(np)	roll.01	roll
arg0(np)-v(v)-arg1(np)-arg2(pp)	whip.01	whip
arg0(np)-v(v)-arg1(np)-arg2(pp)	engage.01	engage
arg0(np)-v(v)-arg1(np)-arg2(pp)	read.01	read
arg1(np)-arg0(np)-v(v)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	guarantee.01	guarantee
arg0(np)-v(v)-arg1(np)-arg2(advp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	handle.01	handle
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(advp)	snatch.01	snatch
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject.01	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rbr)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch.01	switch
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	deserve.01	deserve
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship.01	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	render.03	render
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	americanize.01	americanize
arg0(np)-v(v)-arg1(np)-arg2(pp)	open.01	open
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(vp)	see.01	see
arg0(np)-v(v)-arg2(rb)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg1(np)-arg0(np)-v(v)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(sbar)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(sbar)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	deal.02	deal
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	append.01	append
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(sbar)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(sbar)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	knock.04	knock
arg0(np)-v(v)-arg2(rp)-arg1(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	install.01	instal
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage.01	discourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect.01	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	file.01	file
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	drop.05	drop
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	read.01	read
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(advp)	get.01	get
arg1(np)-arg0(np)-v(v)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	lower.05	lower
arg0(np)-v(v)-arg1(np)-arg2(pp)	outfit.01	outfit
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(pp)-arg1(np)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
v(v)-arg1(np)-arg2(pp)-arg0(np)	characterize.01	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	hide.01	hide
arg0(np)-v(v)-arg1(np)-arg2(pp)	distinguish.01	distinguish
arg0(np)-v(v)-arg1(np)-arg2(pp)	handle.01	handle
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	elect.01	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.15	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit.01	hit
arg0(np)-v(v)-arg2(rp)-arg1(np)	heave.01	heave
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	think.01	think
arg0(np)-v(v)-arg2(pp)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	fund.01	fund
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.15	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply.01	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	forgive.01	forgive
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	scour.02	scour
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	create.01	create
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	abandon.02	abandon
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	splash.01	splash
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret.01	interpret
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	scold.01	scold
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	catch.02	catch
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	indict.01	indict
arg0(np)-v(v)-arg1(np)-arg2(pp)	arrest.01	arrest
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify.01	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	involve.01	involve
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute.01	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	finger.03	finger
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey.01	convey
arg0(np)-arg1(np)-v(v)-arg2(pp)	indict.01	indict
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg1(np)-arg0(np)-v(v)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	elect.01	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	represent.01	represent
arg0(np)-arg2(rb)-v(v)-arg1(np)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	rationalize.01	rationalize
arg0(np)-v(v)-arg1(np)-arg2(pp)	educate.01	educate
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship.01	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	split.01	split
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	phone.01	phone
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	miss.02	miss
arg0(np)-v(v)-arg1(np)-arg2(pp)	miss.02	miss
arg0(np)-v(v)-arg2(rb)-arg1(np)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	deduct.01	deduct
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	deposit.01	deposit
arg0(np)-v(v)-arg1(np)-arg2(sbar)	satisfy.02	satisfy
arg0(np)-v(v)-arg1(np)-arg2(advp)	make.01	make
arg0(np)-v(v)-arg2(pp)-arg1(np)	exempt.01	exempt
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	consign.01	consign
arg0(np)-v(v)-arg2(rb)-arg1(np)	beat.02	beat
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	lump.01	lump
v(v)-arg1(np)-arg2(pp)-arg0(np)	keep.04	keep
arg0(np)-v(v)-arg2(rb)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(advp)	propel.01	propel
arg1(np)-arg0(np)-v(v)-arg2(pp)	feel.01	feel
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject.01	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	prompt.02	prompt
arg1(np)-arg0(np)-v(v)-arg2(np)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	yield.03	yield
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.02	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit.01	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	earmark.01	earmark
arg0(np)-v(v)-arg1(np)-arg2(advp)	take.01	take
arg0(np)-v(v)-arg2(pp)-arg1(np)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	delete.01	delete
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(vp)	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage.01	discourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg2(rb)-arg1(np)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray.01	portray
arg0(np)-v(v)-arg1(np)-arg2(pp)	surrender.01	surrender
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	abandon.03	abandon
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg1(np)-arg0(np)-v(v)-arg2(pp)	cut.01	cut
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	begin.01	begin
arg0(np)-v(v)-arg1(np)-arg2(pp)	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	assimilate.01	assimilate
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg2(pp)-arg1(np)	export.01	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	expunge.01	expunge
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.02	push
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(pp)-arg1(np)	withhold.01	withhold
arg0(np)-v(v)-arg2(np)-arg1(np)	fine.01	fine
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(advp)	boost.01	boost
arg0(np)-v(v)-arg1(np)-arg2(pp)	segregate.01	segregate
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(jjr)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept.01	accept
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire.01	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow.01	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hail.02	hail
arg0(np)-v(v)-arg1(np)-arg2(pp)	embrace.01	embrace
arg0(np)-v(v)-arg2(np)-arg1(np)	hand.01	hand
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	earn.01	earn
arg2(pp)-arg0(np)-v(v)-arg1(np)	extract.01	extract
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass.05	pass
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit.01	hit
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	play.11	play
arg0(np)-v(v)-arg1(np)-arg2(pp)	develop.02	develop
arg0(np)-v(v)-arg1(np)-arg2(s)	inform.01	inform
arg0(np)-v(v)-arg2(np)-arg1(np)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.01	put
arg1(np)-arg0(np)-v(v)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	tape.01	tape
arg0(np)-v(v)-arg1(np)-arg2(pp)	gather.01	gather
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.01	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	park.01	park
arg0(np)-v(v)-arg1(np)-arg2(pp)	dedicate.01	dedicate
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(np)	rename.01	rename
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(np)-arg0(np)-v(v)-arg1(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	position.01	position
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.01	cut
arg0(np)-v(v)-arg1(np)-arg2(jj)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg2(pp)-arg0(np)-v(v)-arg1(np)	succeed.02	succeed
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(rp)-arg1(np)	set.01	set
arg0(np)-v(v)-arg2(pp)-arg1(np)	pass.05	pass
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(vp)	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	resume.01	resume
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire.01	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	rush.01	rush
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	supply.01	supply
arg0(np)-v(v)-arg1(np)-arg2(np)	expand.01	expand
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.02	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.02	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.02	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	challenge.01	challenge
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(vp)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	promote.02	promote
arg0(np)-v(v)-arg1(np)-arg2(pp)	funnel.01	funnel
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	notify.01	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply.01	supply
arg0(np)-v(v)-arg1(c("np", "np"))-arg2(pp)	supply.01	supply
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	talk.02	talk
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	contribute.01	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(rb)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	bury.01	bury
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	represent.01	represent
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	catch.03	catch
arg0(np)-v(v)-arg1(np)-arg2(pp)	assign.01	assign
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(advp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	outperform.01	outperform
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(vp)	approve.01	approve
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-arg2(rb)-v(v)-arg1(np)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-arg2(rb)-v(v)-arg1(np)	expand.01	expand
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-arg2(rb)-v(v)-arg1(np)	raise.01	raise
arg0(np)-arg2(rb)-v(v)-arg1(np)	expand.01	expand
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	occupy.01	occupy
arg0(np)-v(v)-arg1(np)-arg2(pp)	import.01	import
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit.01	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(rb)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-arg2(rb)-v(v)-arg1(np)	expand.01	expand
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	welcome.01	welcome
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-arg2(rb)-v(v)-arg1(np)	accelerate.01	accelerate
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg2(rp)-arg1(np)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	find.01	find
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude.01	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	create.01	create
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	occupy.01	occupy
arg0(np)-v(v)-arg1(np)-arg2(pp)	adapt.01	adapt
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	control.01	control
arg0(np)-v(v)-arg2(rp)-arg1(np)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-arg2(rb)-v(v)-arg1(np)	accelerate.01	accelerate
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	transfer.01	transfer
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist.01	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit.01	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise.02	raise
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	infuse.01	infuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	occupy.01	occupy
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	export.01	export
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn.01	condemn
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	express.01	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	brief.01	brief
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant.01	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute.01	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(s)	direct.01	direct
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.01	hold
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze.02	squeeze
arg2(pp)-arg0(np)-v(v)-arg1(np)	render.02	render
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-arg2(pp)-v(v)-arg1(np)	solve.01	solve
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg2(pp)-arg0(np)-v(v)-arg1(np)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	appoint.01	appoint
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey.01	convey
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg1(np)-arg0(np)-v(v)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(vp)	compel.01	compel
arg0(np)-v(v)-arg1(np)-arg2(vp)	compel.01	compel
arg0(np)-arg2(rb)-v(v)-arg1(np)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey.01	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey.01	convey
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	elevate.01	elevate
arg0(np)-arg2(rb)-v(v)-arg1(np)	expand.01	expand
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	station.01	station
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	express.01	express
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(pp)-arg1(np)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.11	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	express.01	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-arg2(rb)-v(v)-arg1(np)	assess.01	assess
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	intensify.01	intensify
arg0(np)-v(v)-arg1(np)-arg2(pp)	relay.01	relay
arg0(np)-v(v)-arg1(np)-arg2(pp)	express.01	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	station.01	station
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg2(pp)-arg0(np)-v(v)-arg1(np)	determine.01	determine
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg2(rp)-arg1(np)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat.03	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg2(pp)-arg0(np)-v(v)-arg1(np)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg2(pp)-arg0(np)-v(v)-arg1(np)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	break.01	break
arg0(np)-v(v)-arg1(np)-arg2(pp)	break.01	break
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg2(pp)-arg0(np)-v(v)-arg1(np)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(jj)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg2(pp)-arg1(np)	learn.01	learn
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	learn.01	learn
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(s)	answer.01	answer
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	command.02	command
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	prepare.02	prepare
arg0(np)-v(v)-arg2(pp)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	forgive.01	forgive
arg1(np)-arg0(np)-v(v)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	treat.01	treat
arg2(np)-arg0(np)-v(v)-arg1(np)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(rp)-arg1(np)	force.01	force
arg0(np)-v(v)-arg2(pp)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(s)	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(sbar)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hide.01	hide
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(rp)-arg1(np)	hold.03	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg2(rp)-arg1(np)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(rp)-arg1(np)	force.01	force
arg0(np)-v(v)-arg2(rp)-arg1(np)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(rp)-arg1(np)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant.01	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant.01	plant
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	answer.01	answer
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg1(np)-arg0(np)-v(v)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(advp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	reward.01	reward
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	stand.01	stand
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg1(np)-arg0(np)-v(v)-arg2(np)	owe.01	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg1(np)-arg0(np)-v(v)-arg2(np)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover.02	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.01	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	spread.01	spread
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.02	lease
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.02	lease
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick.01	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	hang.01	hang
arg0(np)-v(v)-arg1(np)-arg2(rb)	gather.01	gather
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	warn.01	warn
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	dig.01	dig
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg2(wrb)-arg0(np)-v(v)-arg1(np)	put.01	put
arg2(wrb)-arg0(np)-v(v)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome.01	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome.01	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome.01	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(sbar)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rp)	pull.01	pull
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	command.02	command
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit.01	hit
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(jj)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat.01	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit.01	hit
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	shout.01	shout
arg0(np)-v(v)-arg1(np)-arg2(rb)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie.01	tie
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	prepare.02	prepare
arg0(np)-v(v)-arg2(pp)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(s)	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(rp)-arg1(np)	hold.03	hold
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg1(np)-arg0(np)-v(v)-arg2(np)	name.02	name
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg2(pp)-arg0(np)-v(v)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(s)	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(s)	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg1(np)-arg0(np)-v(v)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(pp)-arg1(np)	say.01	say
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(wrb)-arg0(np)-v(v)-arg1(np)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(s)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg1(np)-arg0(np)-v(v)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(advp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(advp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spread.01	spread
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(s)	answer.01	answer
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.02	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.02	lease
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(sbar)	prepare.02	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit.01	hit
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg1(np)-arg0(np)-v(v)-arg2(c("s", "np"))	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(jj)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat.01	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat.01	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie.01	tie
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap.01	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-arg1(np)-v(v)-arg2(pp)	put.01	put
arg2(np)-arg0(np)-v(v)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(sbar)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
v(v)-arg2(np)-arg1(np)-arg0(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(s)	answer.01	answer
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg2(wp)-arg0(np)-v(v)-arg1(np)	name.01	name
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide.01	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	command.02	command
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(rp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(rb)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	carry.01	carry
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(s)	answer.01	answer
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick.01	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	heal.01	heal
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	wash.01	wash
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	wash.01	wash
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	heal.01	heal
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover.02	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(s)	answer.01	answer
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(vp)	command.02	command
arg0(np)-v(v)-arg1(np)-arg2(s)	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	catch.02	catch
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.02	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(pp)-arg1(np)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant.01	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant.01	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant.01	plant
arg1(np)-arg0(np)-v(v)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(rb)	gather.01	gather
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(rb)	throw.01	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(advp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	waste.01	waste
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome.01	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(sbar)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	dip.02	dip
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(sbar)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(sbar)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat.01	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	shout.01	shout
arg0(np)-v(v)-arg1(np)-arg2(vp)	catch.02	catch
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap.01	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg2(wrb)-arg0(np)-v(v)-arg1(np)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(pp)-arg0(np)-v(v)-arg1(np)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(pp)-arg1(np)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(vp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(s)	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(wrb)-arg0(np)-v(v)-arg1(np)	buy.01	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	command.02	command
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(rb)	leave.12	leave
arg1(np)-arg0(np)-v(v)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	promise.01	promise
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(wrb)-arg0(np)-v(v)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(sbar)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.03	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(s)	answer.01	answer
arg0(np)-v(v)-arg1(np)-arg2(pp)	dip.02	dip
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	leave.12	leave
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	prepare.02	prepare
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg2(wp)-arg0(np)-v(v)-arg1(np)	command.02	command
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(rb)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(rb)	treat.01	treat
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(prp)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prove.01	prove
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(sbar)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg1(np)-arg0(np)-v(v)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(pp)-arg0(np)-v(v)-arg1(np)	upset.01	upset
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg1(np)-arg0(np)-v(v)-arg2(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(rb)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(np)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg1(np)-arg0(np)-v(v)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover.02	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(rp)-arg1(np)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	rescue.01	rescue
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(rb)	gather.01	gather
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(rb)	gather.01	gather
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	earn.01	earn
arg0(np)-v(v)-arg1(np)-arg2(vp)	command.02	command
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	tear.01	tear
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	sing.01	singe
arg0(np)-v(v)-arg1(np)-arg2(rb)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg2(pp)-arg0(np)-v(v)-arg1(np)	make.01	make
arg2(c("s", "vp"))-arg0(np)-v(v)-arg1(np)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(s)	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg2(prp)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(sbar)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(advp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(in)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome.01	welcome
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(s)	answer.01	answer
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	speak.01	speak
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	think.01	think
arg0(np)-v(v)-arg1(np)-arg2(pp)	reward.01	reward
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish.01	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish.01	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	destroy.01	destroy
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(pp)-arg0(np)-v(v)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg1(np)-arg0(np)-v(v)-arg2(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(sbar)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(vp)	beg.01	beg
arg1(np)-arg0(np)-v(v)-arg2(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg2(wp)-arg0(np)-v(v)-arg1(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg1(np)-arg0(np)-v(v)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sing.01	sing
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg1(np)-arg0(np)-v(v)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(vp)	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	teach.01	teach
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg1(np)-arg0(np)-v(v)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	shine.01	shine
arg0(np)-v(v)-arg2(pp)-arg1(np)	learn.01	learn
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.01	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	hurt.01	hurt
arg0(np)-v(v)-arg1(np)-arg2(sbar)	praise.01	praise
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg2(pp)-arg0(np)-v(v)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(sbar)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	clothe.01	clothe
arg0(np)-v(v)-arg1(np)-arg2(pp)	clothe.01	clothe
arg0(np)-v(v)-arg1(np)-arg2(pp)	clothe.01	clothe
arg0(np)-v(v)-arg1(np)-arg2(pp)	clothe.01	clothe
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	comfort.01	comfort
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(adjp)	judge.01	judge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prove.01	prove
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	prepare.02	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	write.01	write
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	learn.01	learn
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept.01	accept
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-arg1(np)-v(v)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg1(np)-arg0(np)-v(v)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg1(np)-arg0(np)-v(v)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(pp)-arg1(np)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg2(nn)-arg0(np)-v(v)-arg1(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg1(np)-arg0(np)-v(v)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(np)-arg0(np)-v(v)-arg1(np)	promise.01	promise
arg1(np)-arg0(np)-v(v)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	seat.01	seat
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg1(np)-arg0(np)-v(v)-arg2(s)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg1(np)-arg0(np)-v(v)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	speak.01	speak
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	treat.01	treat
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg1(np)-arg0(np)-v(v)-arg2(np)	bring.01	bring
arg1(np)-arg0(np)-v(v)-arg2(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg1(np)-arg0(np)-v(v)-arg2(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	replace.01	replace
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(sbar)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	forgive.01	forgive
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(rb)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg2(wp)-arg0(np)-v(v)-arg1(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(np)	treat.01	treat
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(sbar)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(np)	treat.01	treat
arg2(np)-arg0(np)-v(v)-arg1(np)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	read.01	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	kill.01	kill
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept.01	accept
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome.01	welcome
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(sbar)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome.01	welcome
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(advp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	waste.01	waste
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(advp)	lead.01	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(c("np", "np"))-arg2(rb)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish.01	punish
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(to)	command.02	command
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(rb)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage.02	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	destroy.01	destroy
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(vp)	command.02	command
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	crown.01	crown
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(c("s", "vp"))	send.02	send
arg2(pp)-arg0(np)-v(v)-arg1(np)	explain.01	explain
arg1(np)-arg0(np)-v(v)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg1(np)-arg0(np)-v(v)-arg2(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg2(np)-arg0(np)-v(v)-arg1(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	spread.01	spread
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	speak.01	speak
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept.01	accept
arg0(np)-v(v)-arg1(np)-arg2(pp)	learn.01	learn
arg0(np)-v(v)-arg2(rb)-arg1(np)	judge.01	judge
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	welcome.01	welcome
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	want.01	want
arg0(np)-v(v)-arg1(np)-arg2(pp)	please.01	please
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	rub.01	rub
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	carry.01	carry
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	waste.01	waste
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	trust.01	trust
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg2(wp)-arg0(np)-v(v)-arg1(np)	promise.01	promise
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	command.02	command
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	involve.01	involve
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn.01	condemn
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish.01	punish
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg2(pp)-arg0(np)-v(v)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	lead.03	lead
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg1(np)-arg0(np)-v(v)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg1(np)-arg0(np)-v(v)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	advise.01	advise
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish.01	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	wash.01	wash
arg0(np)-v(v)-arg1(np)-arg2(pp)	wipe.01	wipe
arg0(np)-v(v)-arg1(np)-arg2(rp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sweep.01	sweep
arg0(np)-v(v)-arg1(np)-arg2(rb)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	pour.01	pour
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(vp)	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	gather.01	gather
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	destroy.01	destroy
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish.01	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	wipe.01	wipe
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	carry.01	carry
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	measure.01	measure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	recognize.02	recognize
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	catch.02	catch
arg0(np)-v(v)-arg1(np)-arg2(jj)	drive.02	drive
arg0(np)-v(v)-arg2(rb)-arg1(np)	set.01	set
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(to)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	mention.01	mention
arg0(np)-v(v)-arg1(np)-arg2(pp)	associate.01	associate
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg2(np)-v(v)-arg0(np)-arg1(np)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(jj)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.02	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick.01	pick
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg2(np)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	hand.01	hand
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	supplement.01	supplement
arg1(np)-arg0(np)-v(v)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	screw.04	screw
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	hand.01	hand
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	box.02	box
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(rb)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	mention.01	mention
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick.01	stick
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(dt)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg2(wp)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(prp)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	fax.01	fax
arg0(np)-v(v)-arg2(np)-arg1(np)	fax.01	fax
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(rp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(in)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	jam.01	jam
arg0(np)-v(v)-arg2(np)-arg1(np)	guarantee.01	guarantee
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(wp)-arg0(np)-v(v)-arg1(np)	call.01	call
arg2(wdt)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	rub.01	rub
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	charge.01	charge
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(np)	see.01	see
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(rp)	throw.01	throw
arg2(wdt)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	take_off.18	take
arg2(wp)-arg0(np)-v(v)-arg1(c("s", "np"))	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	work.07	work
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	read.01	read
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	know.02	know
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	write.01	write
arg0(np)-v(v)-arg2(prp)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.03	put
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit.01	hit
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg2(np)-v(v)-arg0(np)-arg1(np)	get.01	get
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(v)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	take.10	take
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	take.10	take
arg0(np)-v(v)-arg2(rp)-arg1(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	write.01	write
arg0(np)-v(v)-arg2(np)-arg1(np)	write.01	write
arg2(np)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.03	put
arg1(np)-arg0(np)-v(v)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(np)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.25	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	exchange.01	exchange
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer.01	prefer
arg0(np)-v(v)-arg1(np)-arg2(vp)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	exploit.01	exploit
arg0(np)-v(v)-arg1(np)-arg2(sbar)	exploit.01	exploit
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg2(pp)-arg1(np)	expose.01	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	release.01	release
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(c("np", "np"))-v(v)-arg1(np)-arg2(pp)	convict.01	convict
arg0(np)-v(v)-arg1(np)-arg2(advp)	spread.01	spread
arg0(np)-v(v)-arg2(pp)-arg1(np)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg2(pp)-arg0(np)-v(v)-arg1(np)	express.01	express
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	milk.01	milk
arg0(np)-v(v)-arg1(np)-arg2(pp)	shed.03	shed
arg0(np)-v(v)-arg1(np)-arg2(pp)	favor.01	favor
arg0(np)-v(v)-arg1(np)-arg2(pp)	ask.02	ask
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(pp)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	end.01	end
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.02	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	conclude.02	conclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	prostrate.01	prostrate
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	destroy.01	destroy
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer.02	refer
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(sbar)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	exert.01	exert
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	inspect.01	inspect
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(sbar)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	fire.02	fire
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar.01	bar
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	recite.01	recite
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit.01	submit
arg0(np)-v(v)-arg2(pp)-arg1(np)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg2(pp)-arg1(np)	demonstrate.01	demonstrate
arg0(np)-v(v)-arg1(np)-arg2(pp)	postpone.01	postpone
arg0(np)-v(v)-arg1(np)-arg2(pp)	destroy.01	destroy
arg0(np)-v(v)-arg2(pp)-arg1(np)	prove.01	prove
arg0(np)-v(v)-arg2(pp)-arg1(np)	prove.01	prove
arg0(np)-v(v)-arg2(pp)-arg1(np)	reveal.01	reveal
arg0(np)-v(v)-arg1(np)-arg2(pp)	reveal.01	reveal
arg0(np)-v(v)-arg2(pp)-arg1(np)	reveal.01	reveal
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg2(pp)-arg1(np)	prove.01	prove
arg0(np)-v(v)-arg2(pp)-arg1(np)	prove.01	prove
arg0(np)-v(v)-arg1(np)-arg2(pp)	strike.01	strike
arg0(np)-v(v)-arg1(np)-arg2(pp)	strike.01	strike
arg0(np)-v(v)-arg1(np)-arg2(pp)	strike.01	strike
arg0(np)-v(v)-arg2(np)-arg1(np)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	please.01	please
arg0(np)-v(v)-arg2(np)-arg1(np)	feed.01	feed
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(rp)	drive.02	drive
arg0(np)-v(v)-arg2(pp)-arg1(np)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	liken.03	liken
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(sbar)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	expose.01	expose
arg0(np)-v(v)-arg1(np)-arg2(pp)	allocate.01	allocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	occupy.01	occupy
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(vp)	compel.01	compel
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage.02	encourage
arg0(np)-v(v)-arg1(np)-arg2(sbar)	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant.01	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	begin.01	begin
arg0(np)-v(v)-arg1(np)-arg2(pp)	end.01	end
arg0(np)-v(v)-arg1(np)-arg2(ucp)	finish.01	finish
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	reward.01	reward
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	reward.01	reward
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide.01	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	exploit.01	exploit
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	forgive.01	forgive
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(vp)	inspire.01	inspire
arg2(wrb)-arg0(np)-v(v)-arg1(np)	measure.01	measure
arg0(np)-v(v)-arg1(np)-arg2(pp)	sacrifice.01	sacrifice
arg0(np)-arg2(pp)-v(v)-arg1(np)	destroy.01	destroy
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	relegate.01	relegate
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	supplement.01	supplement
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap.01	wrap
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	waste.01	waste
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-arg2(rb)-v(v)-arg1(np)	expand.01	expand
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(rp)	pull_over.05	pull
arg0(np)-v(v)-arg1(np)-arg2(sbar)	promise.01	promise
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg1(np)-arg0(np)-v(v)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	save.01	save
arg0(np)-arg2(rb)-v(v)-arg1(np)	increase.01	increase
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	heap.01	heap
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	associate.01	associate
arg0(np)-v(v)-arg1(np)-arg2(jj)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	attach.01	attach
arg0(np)-v(v)-arg2(in)-arg1(np)	push.01	push
v(v)-arg1(np)-arg2(pp)-arg0(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	exert.01	exert
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	understand.01	understand
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	announce.01	announce
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	cloak.01	cloak
arg0(np)-v(v)-arg1(np)-arg2(pp)	inherit.01	inherit
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	inflict.01	inflict
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.01	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(v)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	bribe.01	bribe
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(rp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	stain.01	stain
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage.02	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	rap.01	rap
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(sbar)	use.01	use
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-arg2(rb)-v(v)-arg1(np)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(np)	see.02	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	learn.01	learn
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek.01	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	dump.01	dump
arg0(np)-v(v)-arg1(np)-arg2(pp)	dump.01	dump
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(rp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(rb)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg2(wrb)-arg0(np)-v(v)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(advp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	educate.01	educate
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	encourage.02	encourage
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg2(wrb)-arg0(np)-v(v)-arg1(np)	define.01	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	assess.01	assess
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(dt)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	begrudge.01	begrudge
arg0(np)-v(v)-arg1(np)-arg2(pp)	fault.01	fault
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg2(wrb)-arg0(np)-v(v)-arg1(np)	interpret.01	interpret
arg0(np)-v(v)-arg2(rp)-arg1(np)	beat.02	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	redirect.01	redirect
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict.01	restrict
arg0(np)-v(v)-arg1(np)-arg2(sbar)	delude.01	delude
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	define.01	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(advp)	suck.01	suck
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	fault.01	fault
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	generate.01	generate
arg2(pp)-arg0(np)-v(v)-arg1(np)	solve.01	solve
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(sbar)	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	call.02	call
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	schedule.01	schedule
arg0(np)-v(v)-arg1(np)-arg2(pp)	run.09	run
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
v(v)-arg1(np)-arg2(pp)-arg0(np)	fold.01	fold
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(jj)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	yank.01	yank
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg1(np)-arg0(np)-v(v)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch.01	switch
v(v)-arg1(np)-arg2(c("s", "vp"))-arg0(np)	hone.01	hone
arg0(np)-v(v)-arg1(np)-arg2(pp)	contribute.01	contribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	wipe.01	wipe
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.02	push
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer.01	prefer
arg0(np)-v(v)-arg1(np)-arg2(pp)	recount.01	recount
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	hire.01	hire
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(advp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	level.03	level
arg0(np)-v(v)-arg1(np)-arg2(s)	commend.01	commend
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.03	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	fuse.01	fuse
arg1(np)-arg0(np)-v(v)-arg2(pp)	allocate.01	allocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer.02	refer
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	hand.01	hand
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	suspend.02	suspend
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(np)	slash.02	slash
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	investigate.01	investigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant.01	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	inflict.01	inflict
arg0(np)-v(v)-arg1(np)-arg2(pp)	erase.01	erase
arg0(np)-v(v)-arg2(in)-arg1(np)	wave.02	wave
arg0(np)-v(v)-arg1(np)-arg2(pp)	veto.01	veto
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
v(v)-arg1(np)-arg2(pp)-arg0(np)	summon.01	summon
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunge.02	plunge
arg0(np)-v(v)-arg1(np)-arg2(pp)	surrender.01	surrender
arg0(np)-v(v)-arg1(np)-arg2(pp)	cede.01	cede
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore.02	restore
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	nominate.01	nominate
arg1(np)-arg0(np)-v(v)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	thwap.01	thwappe
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel.03	feel
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel.03	feel
arg0(np)-v(v)-arg1(np)-arg2(pp)	splash.01	splash
arg0(np)-v(v)-arg1(np)-arg2(rb)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	demand.01	demand
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(cd)	pop.05	pop
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel.03	feel
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey.01	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	convey.01	convey
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	relay.01	relay
arg0(np)-v(v)-arg1(np)-arg2(pp)	request.01	request
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg1(np)-arg2(pp)	submerge.01	submerge
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	absorb.01	absorb
arg0(np)-v(v)-arg1(np)-arg2(to)	accustom.01	accustom
arg0(np)-v(v)-arg1(np)-arg2(pp)	wipe.01	wipe
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	wish.01	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	wage.01	wage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg1(np)-arg0(np)-v(v)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	crown.01	crown
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	protect.01	protect
arg0(np)-v(v)-arg2(pp)-arg1(np)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg2(wp)-arg0(np)-v(v)-arg1(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	start.01	start
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	engulf.01	engulf
arg0(np)-v(v)-arg1(np)-arg2(pp)	motivate.01	motivate
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	infect.01	infect
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(in)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	accept.01	accept
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	lodge.03	lodge
arg0(np)-v(v)-arg1(np)-arg2(pp)	defend.01	defend
arg0(np)-v(v)-arg1(np)-arg2(adjp)	render.01	render
arg0(np)-v(v)-arg1(np)-arg2(pp)	fix.03	fix
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	import.01	import
arg0(np)-v(v)-arg1(np)-arg2(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg1(np)-arg2(pp)	brief.01	brief
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(np)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunge.02	plunge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.03	hold
arg0(np)-v(v)-arg1(np)-arg2(rb)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.03	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	deposit.01	deposit
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	tease.02	tease
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg2(pp)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(pp)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg2(wp)-arg0(np)-v(v)-arg1(c("s", "np"))	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg2(wp)-arg0(np)-v(v)-arg1(c("s", "np"))	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	carry.01	carry
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover.02	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	declare.01	declare
arg0(np)-v(v)-arg2(rb)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	kill.01	kill
arg0(np)-v(v)-arg1(np)-arg2(vp)	kill.01	kill
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick.01	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick.01	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	pick.01	pick
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	post.01	post
arg0(np)-v(v)-arg1(np)-arg2(pp)	post.01	post
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	report.01	report
arg0(np)-v(v)-arg1(np)-arg2(np)	return.04	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(rb)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(v)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg2(pp)-arg1(np)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish.01	establish
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect.01	connect
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg1(np)-arg0(np)-v(v)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	dedicate.01	dedicate
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(vp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(adjp)	rate.01	rate
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg1(np)-arg2(dt)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	lead.03	lead
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	look.01	look
arg1(np)-arg0(np)-v(v)-arg2(np)	send.01	send
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	park.01	park
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(advp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(c("np", "np"))-arg2(pp)	exchange.01	exchange
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(wdt)	call.01	call
arg2(wrb)-arg0(np)-v(v)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg1(np)-arg0(np)-v(v)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(np)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	report.01	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(rp)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(rp)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	settle.01	settle
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(advp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	congratulate.01	congratulate
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	call.02	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	prefer.01	prefer
arg0(np)-v(v)-arg1(np)-arg2(adjp)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.01	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	break.01	break
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
v(v)-arg1(np)-arg2(pp)-arg0(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	pose.02	pose
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.04	join
arg0(np)-v(v)-arg2(np)-arg1(np)	find.01	find
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	wish.01	wish
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(rb)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(rp)	hold.01	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(in)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	hit.01	hit
arg0(np)-v(v)-arg1(np)-arg2(rb)	leave.12	leave
arg0(np)-v(v)-arg2(rp)-arg1(np)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(vp)	dare.01	dare
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant.01	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	expel.01	expel
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	pave.02	pave
arg0(np)-v(v)-arg1(np)-arg2(rb)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg2(rp)-arg1(np)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg1(np)-arg0(np)-v(v)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	characterize.01	characterize
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	reinstate.01	reinstate
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spill.01	spill
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass.05	pass
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	appoint.01	appoint
arg0(np)-v(v)-arg1(np)-arg2(np)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	incorporate.02	incorporate
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	fund.01	fund
arg0(np)-v(v)-arg2(pp)-arg1(np)	make.01	make
arg0(np)-v(v)-arg2(pp)-arg1(np)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	include.01	include
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(dt)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	liken.03	liken
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	parlay.01	parlay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	enshrine.01	enshrine
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	secure.01	secure
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	deliver.01	deliver
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(rb)	take.04	take
arg2(pp)-arg0(np)-v(v)-arg1(np)	shatter.01	shatter
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg1(np)-arg2(vp)	designate.01	designate
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(dt)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish.01	establish
arg0(np)-v(v)-arg1(np)-arg2(pp)	thrust.01	thrust
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	base.02	base
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
v(v)-arg1(np)-arg2(pp)-arg0(np)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(rb)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	allocate.01	allocate
arg0(np)-v(v)-arg2(np)-arg1(np)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(np)	allow.02	allow
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	summon.01	summon
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	distribute.01	distribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist.01	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(advp)	solve.01	solve
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg2(np)-arg1(np)	feed.01	feed
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	succeed.02	succeed
arg0(np)-v(v)-arg1(np)-arg2(pp)	remove.01	remove
arg0(np)-v(v)-arg1(np)-arg2(pp)	hurt.01	hurt
arg0(np)-v(v)-arg1(np)-arg2(pp)	deter.01	deter
arg0(np)-v(v)-arg1(np)-arg2(pp)	laud.01	laud
arg0(np)-v(v)-arg1(np)-arg2(vp)	compel.01	compel
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	store.01	store
arg0(np)-v(v)-arg1(np)-arg2(pp)	store.01	store
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	redeploy.01	redeploy
arg0(np)-v(v)-arg1(np)-arg2(advp)	stretch.01	stretch
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	stress.01	stress
arg0(np)-v(v)-arg1(np)-arg2(pp)	poll.01	poll
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg1(np)-arg0(np)-v(v)-arg2(c("s", "np"))	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict.01	restrict
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg1(np)-arg0(np)-v(v)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	alert.01	alert
arg0(np)-v(v)-arg1(np)-arg2(pp)	tuck.01	tuck
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	open.01	open
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	transform.01	transform
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	propel.01	propel
arg0(np)-v(v)-arg2(pp)-arg1(np)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg2(pp)-arg0(np)-v(v)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	export.01	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	display.01	display
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(np)	rate.01	rate
arg0(np)-v(v)-arg1(np)-arg2(rb)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(rb)	take.04	take
arg0(np)-arg1(np)-v(v)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(vp)	inspire.01	inspire
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish.01	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	investigate.01	investigate
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	design.01	design
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	lure.01	lure
arg0(np)-v(v)-arg1(np)-arg2(pp)	trace.02	trace
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	thumb.02	thumb
arg0(np)-v(v)-arg1(np)-arg2(pp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	equip.01	equip
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
v(v)-arg1(np)-arg2(pp)-arg0(np)	offer.01	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	challenge.01	challenge
arg0(np)-v(v)-arg1(np)-arg2(pp)	license.01	license
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	see.01	see
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	chastise.01	chastise
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	pressure.01	pressure
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg2(pp)-arg0(np)-v(v)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide.01	guide
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	deserve.01	deserve
arg0(np)-v(v)-arg1(np)-arg2(pp)	bundle.01	bundle
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	aim.02	aim
arg0(np)-v(v)-arg1(np)-arg2(pp)	tailor.01	tailor
arg0(np)-v(v)-arg1(np)-arg2(pp)	reward.01	reward
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	amend.01	amend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	aggravate.01	aggravate
arg0(np)-v(v)-arg1(np)-arg2(pp)	direct.01	direct
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	swap.01	swap
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	press.01	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.01	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(np)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(advp)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	sue.02	sue
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	forgive.01	forgive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	discipline.01	discipline
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(rb)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	ascribe.01	ascribe
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	impart.01	impart
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	entice.01	entice
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
v(v)-arg1(np)-arg2(pp)-arg0(np)	lose.03	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	install.01	install
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.02	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg1(np)-arg2(pp)	predispose.01	predispose
arg0(np)-v(v)-arg2(pp)-arg1(np)	dismiss.02	dismiss
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar.01	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	preclude.01	preclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	proscribe.01	proscribe
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	deny.01	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg2(pp)-arg1(np)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(vp)	empower.01	empower
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	recommend.01	recommend
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	subject.01	subject
arg0(np)-v(v)-arg1(np)-arg2(pp)	prohibit.01	prohibit
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	direct.01	direct
arg0(np)-v(v)-arg1(np)-arg2(sbar)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	set.01	set
arg0(np)-arg2(rb)-v(v)-arg1(np)	extend.01	extend
arg0(np)-v(v)-arg2(rp)-arg1(np)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	target.01	target
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat.03	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	hand.01	hand
arg0(np)-v(v)-arg1(np)-arg2(pp)	obtain.01	obtain
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.04	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	screen.01	screen
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg2(np)-arg1(np)	owe.01	owe
arg0(np)-v(v)-arg2(pp)-arg1(np)	cut.02	cut
v(v)-arg1(np)-arg2(pp)-arg0(np)	take.01	take
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	decry.01	decry
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	factor.01	factor
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(advp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.03	turn
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(pp)	build.01	build
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	smother.01	smother
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.03	return
arg0(np)-v(v)-arg1(np)-arg2(pp)	rank.01	rank
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	yield.03	yield
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer.02	refer
arg0(np)-v(v)-arg2(pp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire.01	acquire
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg2(rp)-arg1(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	withhold.01	withhold
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	condemn.01	condemn
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(v)	rate.01	rate
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire.01	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	define.01	define
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	plug.04	plug
arg0(np)-v(v)-arg1(np)-arg2(pp)	seek.01	seek
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	bribe.01	bribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg2(rp)-arg1(np)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	ship.01	ship
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict.01	restrict
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	raise.02	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg2(pp)-arg1(c("np", "qp"))	borrow.01	borrow
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	rush.01	rush
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	rush.01	rush
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(vp)	name.01	name
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.03	hold
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.02	leave
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	pave.02	pave
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	discourage.01	discourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	break.01	break
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	pressure.01	pressure
arg0(np)-v(v)-arg1(np)-arg2(pp)	peg.01	peg
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg2(rb)-arg1(np)	postpone.01	postpone
arg0(np)-v(v)-arg1(np)-arg2(pp)	distract.01	distract
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg1(np)-arg0(np)-v(v)-arg2(pp)	perceive.01	perceive
arg0(np)-v(v)-arg1(np)-arg2(pp)	tip.01	tip
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	define.01	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(rb)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(rbr)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	salvage.01	salvage
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(vp)	direct.01	direct
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	assist.01	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	yield.03	yield
arg0(np)-v(v)-arg1(np)-arg2(advp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	distinguish.01	distinguish
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	plunk.01	plunk
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	license.01	license
arg0(np)-v(v)-arg1(np)-arg2(pp)	notify.01	notify
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-arg1(np)-v(v)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	rescue.01	rescue
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.04	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	oust.01	oust
arg0(np)-v(v)-arg1(np)-arg2(pp)	amortize.01	amortize
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	amend.01	amend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	come.14	come
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(rp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg2(rp)-arg1(np)	hang.01	hang
arg0(np)-v(v)-arg1(np)-arg2(rb)	rename.01	rename
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.03	save
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	exhort.01	exhort
arg0(np)-v(v)-arg1(np)-arg2(pp)	broker.01	broker
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrict.01	restrict
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(pp)-arg1(np)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject.01	inject
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	separate.01	separate
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	devise.01	devise
arg0(np)-v(v)-arg1(np)-arg2(pp)	hold.01	hold
arg0(np)-v(v)-arg1(np)-arg2(pp)	dismiss.02	dismiss
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit.01	commit
arg0(np)-v(v)-arg1(np)-arg2(pp)	identify.01	identify
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
v(v)-arg1(np)-arg2(pp)-arg0(np)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(rb)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	answer.01	answer
arg0(np)-v(v)-arg1(np)-arg2(pp)	purchase.01	purchase
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(vp)	lead.03	lead
arg0(np)-v(v)-arg1(np)-arg2(pp)	value.01	value
arg0(np)-v(v)-arg1(np)-arg2(pp)	pose.02	pose
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(rp)-arg1(c("np", "qp"))	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	herald.01	herald
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	deposit.01	deposit
arg0(np)-v(v)-arg1(np)-arg2(pp)	refer.02	refer
arg0(np)-v(v)-arg2(np)-arg1(np)	serve.02	serve
arg0(np)-v(v)-arg1(np)-arg2(vp)	entice.01	entice
arg0(np)-v(v)-arg1(np)-arg2(pp)	link.01	link
arg0(np)-v(v)-arg1(np)-arg2(pp)	inject.01	inject
arg0(np)-v(v)-arg2(jj)-arg1(np)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	tout.01	tout
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	influence.01	influence
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	donate.01	donate
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(pp)	portray.01	portray
arg0(np)-v(v)-arg1(np)-arg2(vp)	prod.01	prod
arg0(np)-v(v)-arg1(np)-arg2(pp)	estimate.01	estimate
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar.01	bar
arg0(np)-v(v)-arg1(np)-arg2(vp)	prod.01	prod
arg1(np)-arg0(np)-v(v)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	prompt.02	prompt
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	charge.05	charge
arg0(np)-v(v)-arg1(np)-arg2(pp)	display.01	display
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit.01	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg2(np)-arg1(np)	sell.01	sell
arg0(np)-arg2(rb)-v(v)-arg1(np)	narrow.01	narrow
arg0(np)-arg2(rb)-v(v)-arg1(np)	raise.01	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	introduce.02	introduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	forward.01	forward
arg0(np)-v(v)-arg1(np)-arg2(pp)	give_rise_to.10	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	define.01	define
arg0(np)-v(v)-arg1(np)-arg2(pp)	restrain.01	restrain
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	list.01	list
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	sing.01	sing
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	focus.01	focus
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	win.01	win
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(pp)	wish.01	wish
arg1(np)-arg0(np)-v(v)-arg2(pp)	wish.01	wish
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(sbar)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(prp)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	hire.01	hire
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(rb)	gather.01	gather
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(vp)	command.02	command
arg0(np)-v(v)-arg1(np)-arg2(pp)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	beat.01	beat
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(rb)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	hide.01	hide
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover.02	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(s)	answer.01	answer
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.02	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(rp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	lease.02	lease
arg0(np)-v(v)-arg1(np)-arg2(pp)	teach.01	teach
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg2(wrb)-arg0(np)-v(v)-arg1(np)	put.01	put
arg2(wrb)-arg0(np)-v(v)-arg1(np)	put.01	put
arg2(wrb)-arg0(np)-v(v)-arg1(np)	put.01	put
arg0(np)-v(v)-arg2(pp)-arg1(np)	say.01	say
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(sbar)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(pp)-arg1(np)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(vp)	command.02	command
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	scare.01	scare
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	limit.01	limit
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	punish.01	punish
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg2(wp)-arg0(np)-v(v)-arg1(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	tie.01	tie
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg2(np)-arg1(np)	write.01	write
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg1(np)-arg0(np)-v(v)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(pp)-arg1(np)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(rb)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	upload.01	upload
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	direct.01	direct
arg0(np)-v(v)-arg1(np)-arg2(vp)	induce.01	induce
arg0(np)-v(v)-arg1(np)-arg2(sbar)	understand.01	understand
arg0(np)-v(v)-arg1(np)-arg2(pp)	deal.02	deal
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	consult.01	consult
arg0(np)-v(v)-arg1(np)-arg2(pp)	pound.02	pound
arg0(np)-v(v)-arg1(np)-arg2(pp)	spew.01	spew
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg1(np)-arg0(np)-v(v)-arg2(pp)	borrow.01	borrow
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	mistake.01	mistake
arg0(np)-v(v)-arg1(np)-arg2(pp)	mistake.01	mistake
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg2(pp)-arg1(np)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	devote.01	devote
arg0(np)-v(v)-arg2(rb)-arg1(np)	put.01	put
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	talk.02	talk
arg0(np)-v(v)-arg1(np)-arg2(np)	promise.01	promise
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	treat.01	treat
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	adapt.01	adapt
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(pp)	drive.02	drive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(sbar)	inform.01	inform
arg0(np)-v(v)-arg2(np)-arg1(np)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	scapegoat.01	scapegoat
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	desensitize.01	desensitize
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	avert.01	avert
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg1(np)-arg0(np)-v(v)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(pp)	read.01	read
arg0(np)-v(v)-arg1(np)-arg2(rp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	read.01	read
arg0(np)-v(v)-arg1(np)-arg2(pp)	tell.02	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	outsource.01	outsource
arg0(np)-v(v)-arg1(np)-arg2(pp)	repeat.01	repeat
arg0(np)-v(v)-arg1(np)-arg2(pp)	build.01	build
arg0(np)-v(v)-arg1(np)-arg2(advp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg0(np)-v(v)-arg1(np)-arg2(pp)	stab.01	stab
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(v)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg2(rb)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	guide.01	guide
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	bid.03	bid
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.03	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	press.01	press
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(rb)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(v)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	press.01	press
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.02	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg2(to)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	pressure.01	pressure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	pressure.01	pressure
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(advp)	direct.01	direct
arg0(np)-v(v)-arg1(np)-arg2(pp)	channel.01	channel
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s"))	assure.01	assure
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	deny.01	deny
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg2(np)-arg1(np)	deny.01	deny
arg0(np)-v(v)-arg2(pp)-arg1(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.05	get
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	outsource.01	outsource
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	apply.02	apply
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	shoot.01	shoot
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(v)	catch.02	catch
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	deter.01	deter
arg0(np)-v(v)-arg1(np)-arg2(rp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	summon.01	summon
arg0(np)-v(v)-arg1(np)-arg2(pp)	rate.01	rate
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(c("np", "np"))-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(np)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(sbar)	scold.01	scold
arg0(np)-v(v)-arg1(np)-arg2(pp)	borrow.01	borrow
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(rb)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(sbar)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	regard.01	regard
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	earn.01	earn
arg0(np)-v(v)-arg1(np)-arg2(np)	elect.01	elect
arg0(np)-v(v)-arg1(np)-arg2(pp)	bid.03	bid
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(rb)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	brief.01	brief
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	join.04	join
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	bank.01	bank
arg0(np)-v(v)-arg2(np)-arg1(np)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	establish.01	establish
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	close.01	close
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	close.01	close
arg1(np)-arg0(np)-v(v)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(pp)	tear.01	tear
arg0(np)-v(v)-arg2(rp)-arg1(np)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	heap.01	heap
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg2(c("s", "vp"))-arg0(np)-v(v)-arg1(np)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	guide.01	guide
arg0(np)-v(v)-arg2(pp)-arg1(np)	disclose.01	disclose
arg0(np)-v(v)-arg1(np)-arg2(pp)	pack.01	pack
arg0(np)-v(v)-arg1(np)-arg2(pp)	dispatch.01	dispatch
v(v)-arg1(np)-arg2(pp)-arg0(np)	deter.01	deter
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	owe.01	owe
arg0(np)-v(v)-arg1(np)-arg2(pp)	share.01	share
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg1(np)-arg2(advp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	credit.01	credit
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	obligate.01	obligate
arg0(np)-v(v)-arg2(np)-arg1(np)	sell.01	sell
arg0(np)-v(v)-arg2(pp)-arg1(np)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(advp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	redirect.01	redirect
arg0(np)-v(v)-arg1(np)-arg2(pp)	pull.01	pull
arg0(np)-v(v)-arg1(np)-arg2(pp)	detain.01	detain
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	press.01	press
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	propose.01	propose
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass.05	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	prevent.01	prevent
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	accuse.01	accuse
arg0(np)-v(v)-arg1(np)-arg2(pp)	wage.01	wage
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	squeeze.02	squeeze
arg0(np)-v(v)-arg1(np)-arg2(pp)	trace.02	trace
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(np)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.03	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg2(wrb)-arg0(np)-v(v)-arg1(np)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	represent.01	represent
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	identify.01	identify
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	recruit.01	recruit
arg0(np)-v(v)-arg2(pp)-arg1(np)	submit.01	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	describe.01	describe
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	close.01	close
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	display.01	display
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.03	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	cover.02	cover
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(jj)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	lose.02	lose
arg0(np)-v(v)-arg1(np)-arg2(pp)	pass.05	pass
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	turn.02	turn
arg2(c("s", "vp"))-arg0(np)-v(v)-arg1(np)	control.01	control
arg0(np)-v(v)-arg2(pp)-arg1(np)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg2(np)-arg1(np)	ask.01	ask
arg0(np)-v(v)-arg1(np)-arg2(pp)	prepare.02	prepare
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(s)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(rp)	get.05	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	break.01	break
arg0(np)-v(v)-arg1(np)-arg2(pp)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	connect.01	connect
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(np)-arg2(pp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.02	push
arg0(np)-v(v)-arg1(np)-arg2(advp)	sell.01	sell
arg0(np)-v(v)-arg1(np)-arg2(pp)	pepper.01	pepper
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	talk.02	talk
arg0(np)-v(v)-arg1(np)-arg2(pp)	raise.02	raise
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	move.01	move
arg0(np)-v(v)-arg1(np)-arg2(pp)	allocate.01	allocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	allocate.01	allocate
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.06	fill
arg0(np)-arg1(np)-v(v)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	hook.01	hook
arg0(np)-v(v)-arg1(np)-arg2(rp)	push.02	push
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
v(v)-arg1(np)-arg2(pp)-arg0(np)	compare.01	compare
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	interpret.01	interpret
arg0(np)-v(v)-arg1(np)-arg2(rb)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(pp)	supply.01	supply
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	challenge.01	challenge
arg0(np)-v(v)-arg1(np)-arg2(pp)	cite.01	cite
arg0(np)-v(v)-arg1(np)-arg2(pp)	export.01	export
arg0(np)-v(v)-arg1(np)-arg2(pp)	discuss.01	discuss
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	recommend.01	recommend
arg0(np)-v(v)-arg1(np)-arg2(pp)	pave.02	pave
arg0(np)-v(v)-arg1(np)-arg2(pp)	award.01	award
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	bribe.01	bribe
arg0(np)-v(v)-arg1(np)-arg2(pp)	file.01	file
arg0(np)-v(v)-arg1(np)-arg2(pp)	cast.01	cast
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	remember.01	remember
arg0(np)-v(v)-arg1(np)-arg2(adjp)	paint.01	paint
arg0(np)-v(v)-arg1(np)-arg2(pp)	excise.01	excise
arg0(np)-v(v)-arg1(np)-arg2(pp)	recover.02	recover
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	sweep.01	sweep
arg0(np)-v(v)-arg1(np)-arg2(pp)	conclude.02	conclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	leave.12	leave
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	acquire.01	acquire
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg1(np)-arg0(np)-v(v)-arg2(np)	guarantee.01	guarantee
arg0(np)-v(v)-arg1(np)-arg2(pp)	wean.01	wean
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	paint.03	paint
arg0(np)-v(v)-arg1(np)-arg2(pp)	reposition.01	reposition
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	fill.01	fill
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	withdraw.01	withdraw
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(c("np", "np"))-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	exceed.01	exceed
arg0(np)-v(v)-arg1(np)-arg2(pp)	dismiss.02	dismiss
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	purge.01	purge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	view.02	view
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(vp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	shift.01	shift
arg0(np)-v(v)-arg1(np)-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	place.01	place
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bar.01	bar
arg0(np)-v(v)-arg1(np)-arg2(pp)	install.01	instal
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.01	cut
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(vp)	pressure.01	pressure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	impose.01	impose
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	collect.01	collect
arg0(np)-v(v)-arg1(np)-arg2(pp)	caption.01	caption
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	lodge.02	lodge
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	draw.02	draw
arg0(np)-v(v)-arg1(np)-arg2(pp)	heap.01	heap
arg0(np)-v(v)-arg1(np)-arg2(pp)	sandwich.01	sandwich
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	subject.01	subject
arg0(np)-v(v)-arg1(np)-arg2(vp)	order.01	order
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	shave.01	shave
arg0(np)-v(v)-arg1(c("np", "qp"))-arg2(pp)	add.02	add
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	switch.01	switch
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	issue.01	issue
arg0(np)-v(v)-arg1(np)-arg2(pp)	finger.03	finger
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(advp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	combine.01	combine
arg0(np)-v(v)-arg1(np)-arg2(pp)	exclude.01	exclude
arg0(np)-v(v)-arg1(np)-arg2(pp)	cut.02	cut
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	push.01	push
arg0(np)-v(v)-arg1(np)-arg2(sbar)	advise.01	advise
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	program.01	program
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.01	extend
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(advp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-arg2(rb)-v(v)-arg1(np)	expand.01	expand
arg0(np)-v(v)-arg1(np)-arg2(pp)	couple.01	couple
arg0(np)-v(v)-arg2(nnp)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg1(np)-arg2(pp)	enter.02	enter
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	announce.01	announce
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg2(rp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(pp)	invest.01	invest
arg0(np)-v(v)-arg1(np)-arg2(pp)	increase.01	increase
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	employ.02	employ
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	occupy.01	occupy
arg0(np)-arg2(rb)-v(v)-arg1(np)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	dedicate.01	dedicate
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	designate.01	designate
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg2(pp)-arg0(np)-v(v)-arg1(np)	expand.01	expand
arg0(np)-v(v)-arg1(np)-arg2(pp)	start.01	start
arg0(np)-v(v)-arg1(np)-arg2(pp)	sign.02	sign
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	submit.01	submit
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg1(np)-arg0(np)-v(v)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	commend.01	commend
arg0(np)-v(v)-arg1(np)-arg2(pp)	represent.01	represent
arg0(np)-v(v)-arg1(np)-arg2(vp)	assist.01	assist
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	take.01	take
arg0(np)-v(v)-arg1(np)-arg2(vp)	encourage.01	encourage
arg0(np)-v(v)-arg1(np)-arg2(pp)	praise.01	praise
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	touch.01	touch
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(rp)	force.01	force
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(rp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(vp)	command.02	command
arg0(np)-v(v)-arg1(np)-arg2(rp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	stand.01	stand
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(sbar)	assure.01	assure
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(vp)	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	beg.01	beg
arg0(np)-v(v)-arg1(np)-arg2(pp)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(advp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	stand.01	stand
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	criticize.01	criticize
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("sbar", "s", "vp"))	send.02	send
arg1(np)-arg0(np)-v(v)-arg2(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	wrap.01	wrap
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	spread.01	spread
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg2(rp)-arg1(np)	throw.01	throw
arg0(np)-v(v)-arg1(np)-arg2(pp)	change.01	change
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg1(np)-arg0(np)-v(v)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	shout.01	shout
arg0(np)-v(v)-arg1(np)-arg2(vp)	force.01	force
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.01	make
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	kill.01	kill
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	divide.02	divide
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	stick.01	stick
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(pp)-arg1(np)	say.01	say
arg0(np)-v(v)-arg2(pp)-arg1(np)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg1(np)-arg0(np)-v(v)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.02	send
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	lay.01	lay
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	make.05	make
arg0(np)-v(v)-arg1(np)-arg2(vp)	convince.01	convince
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	explain.01	explain
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(rb)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(pp)	steal.01	steal
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	feel.01	feel
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(pp)	blame.01	blame
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(vp)	prepare.02	prepare
arg1(np)-arg0(np)-v(v)-arg2(pp)	choose.01	choose
arg0(np)-v(v)-arg2(pp)-arg1(np)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	plant.01	plant
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	stop.03	stop
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	produce.01	produce
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(pp)	mix.01	mix
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	sprinkle.01	sprinkle
arg0(np)-v(v)-arg1(np)-arg2(vp)	command.02	command
arg0(np)-v(v)-arg1(np)-arg2(pp)	sprinkle.01	sprinkle
arg0(np)-v(v)-arg1(np)-arg2(pp)	sprinkle.01	sprinkle
arg0(np)-v(v)-arg1(np)-arg2(pp)	offer.01	offer
arg0(np)-v(v)-arg1(np)-arg2(pp)	bring.01	bring
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(in)	get.01	get
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(pp)	get.01	get
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg1(np)-arg0(np)-v(v)-arg2(pp)	do.02	do
arg0(np)-v(v)-arg1(np)-arg2(pp)	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	write.01	write
arg0(np)-v(v)-arg2(np)-arg1(np)	write.01	write
arg0(np)-v(v)-arg1(np)-arg2(pp)	hear.01	hear
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(in)	work.07	work
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	say.01	say
arg0(np)-v(v)-arg1(np)-arg2(rb)	put.03	put
arg1(np)-arg0(np)-v(v)-arg2(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(rp)	drag.01	drag
arg0(np)-v(v)-arg1(np)-arg2(advp)	bring.01	bring
arg1(np)-arg0(np)-v(v)-arg2(np)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	email.01	email
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	begin.01	begin
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	advise.01	advise
arg0(np)-v(v)-arg2(pp)-arg1(np)	hear.01	hear
arg0(np)-v(v)-arg1(np)-arg2(pp)	restore.01	restore
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(sbar)	convince.01	convince
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	inform.01	inform
arg0(np)-v(v)-arg2(np)-arg1(np)	hand.01	hand
arg0(np)-v(v)-arg1(np)-arg2(pp)	save.02	save
arg0(np)-v(v)-arg1(np)-arg2(pp)	rob.01	rob
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	free.01	free
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	extend.02	extend
arg0(np)-v(v)-arg1(np)-arg2(pp)	rain.01	rain
arg0(np)-v(v)-arg1(np)-arg2(pp)	curry.02	curry
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	order.01	order
arg0(np)-v(v)-arg1(np)-arg2(pp)	keep.04	keep
arg0(np)-v(v)-arg1(np)-arg2(pp)	commit.01	commit
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(sbar)	inform.01	inform
arg0(np)-v(v)-arg1(np)-arg2(pp)	demand.01	demand
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	receive.01	receive
arg0(np)-v(v)-arg1(np)-arg2(pp)	present.01	present
arg0(np)-v(v)-arg1(np)-arg2(pp)	deserve.01	deserve
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	grant.01	grant
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(pp)	embrace.01	embrace
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	urge.01	urge
arg0(np)-v(v)-arg1(np)-arg2(pp)	kill.01	kill
arg0(np)-v(v)-arg1(np)-arg2(pp)	return.02	return
arg0(np)-v(v)-arg2(np)-arg1(np)	lend.01	lend
arg0(np)-v(v)-arg1(np)-arg2(pp)	rush.01	rush
arg0(np)-v(v)-arg1(np)-arg2(np)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	persuade.01	persuade
arg0(np)-v(v)-arg1(np)-arg2(rb)	take.04	take
arg0(np)-v(v)-arg1(np)-arg2(pp)	solve.01	solve
arg0(np)-v(v)-arg1(np)-arg2(pp)	report.01	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	put.01	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	lend.01	lend
arg0(np)-v(v)-arg2(np)-arg1(np)	wish.01	wish
arg0(np)-v(v)-arg2(np)-arg1(np)	wish.01	wish
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	thank.01	thank
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(pp)	pay.01	pay
arg0(np)-v(v)-arg2(np)-arg1(np)	pay.01	pay
arg0(np)-v(v)-arg1(np)-arg2(pp)	attribute.01	attribute
arg0(np)-v(v)-arg1(np)-arg2(pp)	set.01	set
arg0(np)-v(v)-arg1(np)-arg2(pp)	shove.01	shove
arg0(np)-v(v)-arg1(np)-arg2(pp)	break.01	break
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	invite.01	invite
arg0(np)-v(v)-arg2(np)-arg1(np)	show.01	show
arg0(np)-v(v)-arg1(np)-arg2(np)	promise.01	promise
arg1(np)-arg0(np)-v(v)-arg2(pp)	put.03	put
arg0(np)-v(v)-arg1(np)-arg2(pp)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(pp)	spray.01	spray
arg1(np)-arg0(np)-v(v)-arg2(pp)	disavow.01	disavow
arg0(np)-v(v)-arg1(np)-arg2(pp)	entrust.01	entrust
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	convert.01	convert
arg0(np)-v(v)-arg1(np)-arg2(pp)	lavish.01	lavish
arg0(np)-v(v)-arg2(np)-arg1(np)	give.01	give
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	use.01	use
arg0(np)-v(v)-arg2(np)-arg1(np)	provide.01	provide
arg0(np)-v(v)-arg1(np)-arg2(pp)	buy.01	buy
arg0(np)-v(v)-arg1(np)-arg2(np)	call.01	call
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	point.01	point
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	reduce.01	reduce
arg0(np)-v(v)-arg1(np)-arg2(pp)	report.01	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	report.01	report
arg0(np)-v(v)-arg1(np)-arg2(pp)	send.01	send
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg1(np)-arg2(c("s", "vp"))	spend.02	spend
arg0(np)-v(v)-arg2(np)-arg1(np)	tell.01	tell
